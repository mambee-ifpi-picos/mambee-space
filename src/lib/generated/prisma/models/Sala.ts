
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Sala` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Sala
 * 
 */
export type SalaModel = runtime.Types.Result.DefaultSelection<Prisma.$SalaPayload>

export type AggregateSala = {
  _count: SalaCountAggregateOutputType | null
  _avg: SalaAvgAggregateOutputType | null
  _sum: SalaSumAggregateOutputType | null
  _min: SalaMinAggregateOutputType | null
  _max: SalaMaxAggregateOutputType | null
}

export type SalaAvgAggregateOutputType = {
  idSala: number | null
  limiteHorasReserva: number | null
  idUsuarioCriador: number | null
}

export type SalaSumAggregateOutputType = {
  idSala: number | null
  limiteHorasReserva: number | null
  idUsuarioCriador: number | null
}

export type SalaMinAggregateOutputType = {
  idSala: number | null
  nomeSala: string | null
  mapa: string | null
  limiteHorasReserva: number | null
  ativa: boolean | null
  idUsuarioCriador: number | null
}

export type SalaMaxAggregateOutputType = {
  idSala: number | null
  nomeSala: string | null
  mapa: string | null
  limiteHorasReserva: number | null
  ativa: boolean | null
  idUsuarioCriador: number | null
}

export type SalaCountAggregateOutputType = {
  idSala: number
  nomeSala: number
  mapa: number
  limiteHorasReserva: number
  ativa: number
  idUsuarioCriador: number
  _all: number
}


export type SalaAvgAggregateInputType = {
  idSala?: true
  limiteHorasReserva?: true
  idUsuarioCriador?: true
}

export type SalaSumAggregateInputType = {
  idSala?: true
  limiteHorasReserva?: true
  idUsuarioCriador?: true
}

export type SalaMinAggregateInputType = {
  idSala?: true
  nomeSala?: true
  mapa?: true
  limiteHorasReserva?: true
  ativa?: true
  idUsuarioCriador?: true
}

export type SalaMaxAggregateInputType = {
  idSala?: true
  nomeSala?: true
  mapa?: true
  limiteHorasReserva?: true
  ativa?: true
  idUsuarioCriador?: true
}

export type SalaCountAggregateInputType = {
  idSala?: true
  nomeSala?: true
  mapa?: true
  limiteHorasReserva?: true
  ativa?: true
  idUsuarioCriador?: true
  _all?: true
}

export type SalaAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Sala to aggregate.
   */
  where?: Prisma.SalaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Salas to fetch.
   */
  orderBy?: Prisma.SalaOrderByWithRelationInput | Prisma.SalaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.SalaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Salas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Salas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Salas
  **/
  _count?: true | SalaCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: SalaAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: SalaSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: SalaMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: SalaMaxAggregateInputType
}

export type GetSalaAggregateType<T extends SalaAggregateArgs> = {
      [P in keyof T & keyof AggregateSala]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateSala[P]>
    : Prisma.GetScalarType<T[P], AggregateSala[P]>
}




export type SalaGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SalaWhereInput
  orderBy?: Prisma.SalaOrderByWithAggregationInput | Prisma.SalaOrderByWithAggregationInput[]
  by: Prisma.SalaScalarFieldEnum[] | Prisma.SalaScalarFieldEnum
  having?: Prisma.SalaScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: SalaCountAggregateInputType | true
  _avg?: SalaAvgAggregateInputType
  _sum?: SalaSumAggregateInputType
  _min?: SalaMinAggregateInputType
  _max?: SalaMaxAggregateInputType
}

export type SalaGroupByOutputType = {
  idSala: number
  nomeSala: string
  mapa: string
  limiteHorasReserva: number
  ativa: boolean
  idUsuarioCriador: number
  _count: SalaCountAggregateOutputType | null
  _avg: SalaAvgAggregateOutputType | null
  _sum: SalaSumAggregateOutputType | null
  _min: SalaMinAggregateOutputType | null
  _max: SalaMaxAggregateOutputType | null
}

type GetSalaGroupByPayload<T extends SalaGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<SalaGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof SalaGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], SalaGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], SalaGroupByOutputType[P]>
      }
    >
  >



export type SalaWhereInput = {
  AND?: Prisma.SalaWhereInput | Prisma.SalaWhereInput[]
  OR?: Prisma.SalaWhereInput[]
  NOT?: Prisma.SalaWhereInput | Prisma.SalaWhereInput[]
  idSala?: Prisma.IntFilter<"Sala"> | number
  nomeSala?: Prisma.StringFilter<"Sala"> | string
  mapa?: Prisma.StringFilter<"Sala"> | string
  limiteHorasReserva?: Prisma.IntFilter<"Sala"> | number
  ativa?: Prisma.BoolFilter<"Sala"> | boolean
  idUsuarioCriador?: Prisma.IntFilter<"Sala"> | number
  criador?: Prisma.XOR<Prisma.UsuarioScalarRelationFilter, Prisma.UsuarioWhereInput>
  espacos?: Prisma.EspacoListRelationFilter
}

export type SalaOrderByWithRelationInput = {
  idSala?: Prisma.SortOrder
  nomeSala?: Prisma.SortOrder
  mapa?: Prisma.SortOrder
  limiteHorasReserva?: Prisma.SortOrder
  ativa?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
  criador?: Prisma.UsuarioOrderByWithRelationInput
  espacos?: Prisma.EspacoOrderByRelationAggregateInput
}

export type SalaWhereUniqueInput = Prisma.AtLeast<{
  idSala?: number
  AND?: Prisma.SalaWhereInput | Prisma.SalaWhereInput[]
  OR?: Prisma.SalaWhereInput[]
  NOT?: Prisma.SalaWhereInput | Prisma.SalaWhereInput[]
  nomeSala?: Prisma.StringFilter<"Sala"> | string
  mapa?: Prisma.StringFilter<"Sala"> | string
  limiteHorasReserva?: Prisma.IntFilter<"Sala"> | number
  ativa?: Prisma.BoolFilter<"Sala"> | boolean
  idUsuarioCriador?: Prisma.IntFilter<"Sala"> | number
  criador?: Prisma.XOR<Prisma.UsuarioScalarRelationFilter, Prisma.UsuarioWhereInput>
  espacos?: Prisma.EspacoListRelationFilter
}, "idSala">

export type SalaOrderByWithAggregationInput = {
  idSala?: Prisma.SortOrder
  nomeSala?: Prisma.SortOrder
  mapa?: Prisma.SortOrder
  limiteHorasReserva?: Prisma.SortOrder
  ativa?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
  _count?: Prisma.SalaCountOrderByAggregateInput
  _avg?: Prisma.SalaAvgOrderByAggregateInput
  _max?: Prisma.SalaMaxOrderByAggregateInput
  _min?: Prisma.SalaMinOrderByAggregateInput
  _sum?: Prisma.SalaSumOrderByAggregateInput
}

export type SalaScalarWhereWithAggregatesInput = {
  AND?: Prisma.SalaScalarWhereWithAggregatesInput | Prisma.SalaScalarWhereWithAggregatesInput[]
  OR?: Prisma.SalaScalarWhereWithAggregatesInput[]
  NOT?: Prisma.SalaScalarWhereWithAggregatesInput | Prisma.SalaScalarWhereWithAggregatesInput[]
  idSala?: Prisma.IntWithAggregatesFilter<"Sala"> | number
  nomeSala?: Prisma.StringWithAggregatesFilter<"Sala"> | string
  mapa?: Prisma.StringWithAggregatesFilter<"Sala"> | string
  limiteHorasReserva?: Prisma.IntWithAggregatesFilter<"Sala"> | number
  ativa?: Prisma.BoolWithAggregatesFilter<"Sala"> | boolean
  idUsuarioCriador?: Prisma.IntWithAggregatesFilter<"Sala"> | number
}

export type SalaCreateInput = {
  nomeSala: string
  mapa: string
  limiteHorasReserva: number
  ativa?: boolean
  criador: Prisma.UsuarioCreateNestedOneWithoutSalasCriadasInput
  espacos?: Prisma.EspacoCreateNestedManyWithoutSalaInput
}

export type SalaUncheckedCreateInput = {
  idSala?: number
  nomeSala: string
  mapa: string
  limiteHorasReserva: number
  ativa?: boolean
  idUsuarioCriador: number
  espacos?: Prisma.EspacoUncheckedCreateNestedManyWithoutSalaInput
}

export type SalaUpdateInput = {
  nomeSala?: Prisma.StringFieldUpdateOperationsInput | string
  mapa?: Prisma.StringFieldUpdateOperationsInput | string
  limiteHorasReserva?: Prisma.IntFieldUpdateOperationsInput | number
  ativa?: Prisma.BoolFieldUpdateOperationsInput | boolean
  criador?: Prisma.UsuarioUpdateOneRequiredWithoutSalasCriadasNestedInput
  espacos?: Prisma.EspacoUpdateManyWithoutSalaNestedInput
}

export type SalaUncheckedUpdateInput = {
  idSala?: Prisma.IntFieldUpdateOperationsInput | number
  nomeSala?: Prisma.StringFieldUpdateOperationsInput | string
  mapa?: Prisma.StringFieldUpdateOperationsInput | string
  limiteHorasReserva?: Prisma.IntFieldUpdateOperationsInput | number
  ativa?: Prisma.BoolFieldUpdateOperationsInput | boolean
  idUsuarioCriador?: Prisma.IntFieldUpdateOperationsInput | number
  espacos?: Prisma.EspacoUncheckedUpdateManyWithoutSalaNestedInput
}

export type SalaCreateManyInput = {
  idSala?: number
  nomeSala: string
  mapa: string
  limiteHorasReserva: number
  ativa?: boolean
  idUsuarioCriador: number
}

export type SalaUpdateManyMutationInput = {
  nomeSala?: Prisma.StringFieldUpdateOperationsInput | string
  mapa?: Prisma.StringFieldUpdateOperationsInput | string
  limiteHorasReserva?: Prisma.IntFieldUpdateOperationsInput | number
  ativa?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type SalaUncheckedUpdateManyInput = {
  idSala?: Prisma.IntFieldUpdateOperationsInput | number
  nomeSala?: Prisma.StringFieldUpdateOperationsInput | string
  mapa?: Prisma.StringFieldUpdateOperationsInput | string
  limiteHorasReserva?: Prisma.IntFieldUpdateOperationsInput | number
  ativa?: Prisma.BoolFieldUpdateOperationsInput | boolean
  idUsuarioCriador?: Prisma.IntFieldUpdateOperationsInput | number
}

export type SalaListRelationFilter = {
  every?: Prisma.SalaWhereInput
  some?: Prisma.SalaWhereInput
  none?: Prisma.SalaWhereInput
}

export type SalaOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type SalaCountOrderByAggregateInput = {
  idSala?: Prisma.SortOrder
  nomeSala?: Prisma.SortOrder
  mapa?: Prisma.SortOrder
  limiteHorasReserva?: Prisma.SortOrder
  ativa?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
}

export type SalaAvgOrderByAggregateInput = {
  idSala?: Prisma.SortOrder
  limiteHorasReserva?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
}

export type SalaMaxOrderByAggregateInput = {
  idSala?: Prisma.SortOrder
  nomeSala?: Prisma.SortOrder
  mapa?: Prisma.SortOrder
  limiteHorasReserva?: Prisma.SortOrder
  ativa?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
}

export type SalaMinOrderByAggregateInput = {
  idSala?: Prisma.SortOrder
  nomeSala?: Prisma.SortOrder
  mapa?: Prisma.SortOrder
  limiteHorasReserva?: Prisma.SortOrder
  ativa?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
}

export type SalaSumOrderByAggregateInput = {
  idSala?: Prisma.SortOrder
  limiteHorasReserva?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
}

export type SalaScalarRelationFilter = {
  is?: Prisma.SalaWhereInput
  isNot?: Prisma.SalaWhereInput
}

export type SalaCreateNestedManyWithoutCriadorInput = {
  create?: Prisma.XOR<Prisma.SalaCreateWithoutCriadorInput, Prisma.SalaUncheckedCreateWithoutCriadorInput> | Prisma.SalaCreateWithoutCriadorInput[] | Prisma.SalaUncheckedCreateWithoutCriadorInput[]
  connectOrCreate?: Prisma.SalaCreateOrConnectWithoutCriadorInput | Prisma.SalaCreateOrConnectWithoutCriadorInput[]
  createMany?: Prisma.SalaCreateManyCriadorInputEnvelope
  connect?: Prisma.SalaWhereUniqueInput | Prisma.SalaWhereUniqueInput[]
}

export type SalaUncheckedCreateNestedManyWithoutCriadorInput = {
  create?: Prisma.XOR<Prisma.SalaCreateWithoutCriadorInput, Prisma.SalaUncheckedCreateWithoutCriadorInput> | Prisma.SalaCreateWithoutCriadorInput[] | Prisma.SalaUncheckedCreateWithoutCriadorInput[]
  connectOrCreate?: Prisma.SalaCreateOrConnectWithoutCriadorInput | Prisma.SalaCreateOrConnectWithoutCriadorInput[]
  createMany?: Prisma.SalaCreateManyCriadorInputEnvelope
  connect?: Prisma.SalaWhereUniqueInput | Prisma.SalaWhereUniqueInput[]
}

export type SalaUpdateManyWithoutCriadorNestedInput = {
  create?: Prisma.XOR<Prisma.SalaCreateWithoutCriadorInput, Prisma.SalaUncheckedCreateWithoutCriadorInput> | Prisma.SalaCreateWithoutCriadorInput[] | Prisma.SalaUncheckedCreateWithoutCriadorInput[]
  connectOrCreate?: Prisma.SalaCreateOrConnectWithoutCriadorInput | Prisma.SalaCreateOrConnectWithoutCriadorInput[]
  upsert?: Prisma.SalaUpsertWithWhereUniqueWithoutCriadorInput | Prisma.SalaUpsertWithWhereUniqueWithoutCriadorInput[]
  createMany?: Prisma.SalaCreateManyCriadorInputEnvelope
  set?: Prisma.SalaWhereUniqueInput | Prisma.SalaWhereUniqueInput[]
  disconnect?: Prisma.SalaWhereUniqueInput | Prisma.SalaWhereUniqueInput[]
  delete?: Prisma.SalaWhereUniqueInput | Prisma.SalaWhereUniqueInput[]
  connect?: Prisma.SalaWhereUniqueInput | Prisma.SalaWhereUniqueInput[]
  update?: Prisma.SalaUpdateWithWhereUniqueWithoutCriadorInput | Prisma.SalaUpdateWithWhereUniqueWithoutCriadorInput[]
  updateMany?: Prisma.SalaUpdateManyWithWhereWithoutCriadorInput | Prisma.SalaUpdateManyWithWhereWithoutCriadorInput[]
  deleteMany?: Prisma.SalaScalarWhereInput | Prisma.SalaScalarWhereInput[]
}

export type SalaUncheckedUpdateManyWithoutCriadorNestedInput = {
  create?: Prisma.XOR<Prisma.SalaCreateWithoutCriadorInput, Prisma.SalaUncheckedCreateWithoutCriadorInput> | Prisma.SalaCreateWithoutCriadorInput[] | Prisma.SalaUncheckedCreateWithoutCriadorInput[]
  connectOrCreate?: Prisma.SalaCreateOrConnectWithoutCriadorInput | Prisma.SalaCreateOrConnectWithoutCriadorInput[]
  upsert?: Prisma.SalaUpsertWithWhereUniqueWithoutCriadorInput | Prisma.SalaUpsertWithWhereUniqueWithoutCriadorInput[]
  createMany?: Prisma.SalaCreateManyCriadorInputEnvelope
  set?: Prisma.SalaWhereUniqueInput | Prisma.SalaWhereUniqueInput[]
  disconnect?: Prisma.SalaWhereUniqueInput | Prisma.SalaWhereUniqueInput[]
  delete?: Prisma.SalaWhereUniqueInput | Prisma.SalaWhereUniqueInput[]
  connect?: Prisma.SalaWhereUniqueInput | Prisma.SalaWhereUniqueInput[]
  update?: Prisma.SalaUpdateWithWhereUniqueWithoutCriadorInput | Prisma.SalaUpdateWithWhereUniqueWithoutCriadorInput[]
  updateMany?: Prisma.SalaUpdateManyWithWhereWithoutCriadorInput | Prisma.SalaUpdateManyWithWhereWithoutCriadorInput[]
  deleteMany?: Prisma.SalaScalarWhereInput | Prisma.SalaScalarWhereInput[]
}

export type SalaCreateNestedOneWithoutEspacosInput = {
  create?: Prisma.XOR<Prisma.SalaCreateWithoutEspacosInput, Prisma.SalaUncheckedCreateWithoutEspacosInput>
  connectOrCreate?: Prisma.SalaCreateOrConnectWithoutEspacosInput
  connect?: Prisma.SalaWhereUniqueInput
}

export type SalaUpdateOneRequiredWithoutEspacosNestedInput = {
  create?: Prisma.XOR<Prisma.SalaCreateWithoutEspacosInput, Prisma.SalaUncheckedCreateWithoutEspacosInput>
  connectOrCreate?: Prisma.SalaCreateOrConnectWithoutEspacosInput
  upsert?: Prisma.SalaUpsertWithoutEspacosInput
  connect?: Prisma.SalaWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.SalaUpdateToOneWithWhereWithoutEspacosInput, Prisma.SalaUpdateWithoutEspacosInput>, Prisma.SalaUncheckedUpdateWithoutEspacosInput>
}

export type SalaCreateWithoutCriadorInput = {
  nomeSala: string
  mapa: string
  limiteHorasReserva: number
  ativa?: boolean
  espacos?: Prisma.EspacoCreateNestedManyWithoutSalaInput
}

export type SalaUncheckedCreateWithoutCriadorInput = {
  idSala?: number
  nomeSala: string
  mapa: string
  limiteHorasReserva: number
  ativa?: boolean
  espacos?: Prisma.EspacoUncheckedCreateNestedManyWithoutSalaInput
}

export type SalaCreateOrConnectWithoutCriadorInput = {
  where: Prisma.SalaWhereUniqueInput
  create: Prisma.XOR<Prisma.SalaCreateWithoutCriadorInput, Prisma.SalaUncheckedCreateWithoutCriadorInput>
}

export type SalaCreateManyCriadorInputEnvelope = {
  data: Prisma.SalaCreateManyCriadorInput | Prisma.SalaCreateManyCriadorInput[]
  skipDuplicates?: boolean
}

export type SalaUpsertWithWhereUniqueWithoutCriadorInput = {
  where: Prisma.SalaWhereUniqueInput
  update: Prisma.XOR<Prisma.SalaUpdateWithoutCriadorInput, Prisma.SalaUncheckedUpdateWithoutCriadorInput>
  create: Prisma.XOR<Prisma.SalaCreateWithoutCriadorInput, Prisma.SalaUncheckedCreateWithoutCriadorInput>
}

export type SalaUpdateWithWhereUniqueWithoutCriadorInput = {
  where: Prisma.SalaWhereUniqueInput
  data: Prisma.XOR<Prisma.SalaUpdateWithoutCriadorInput, Prisma.SalaUncheckedUpdateWithoutCriadorInput>
}

export type SalaUpdateManyWithWhereWithoutCriadorInput = {
  where: Prisma.SalaScalarWhereInput
  data: Prisma.XOR<Prisma.SalaUpdateManyMutationInput, Prisma.SalaUncheckedUpdateManyWithoutCriadorInput>
}

export type SalaScalarWhereInput = {
  AND?: Prisma.SalaScalarWhereInput | Prisma.SalaScalarWhereInput[]
  OR?: Prisma.SalaScalarWhereInput[]
  NOT?: Prisma.SalaScalarWhereInput | Prisma.SalaScalarWhereInput[]
  idSala?: Prisma.IntFilter<"Sala"> | number
  nomeSala?: Prisma.StringFilter<"Sala"> | string
  mapa?: Prisma.StringFilter<"Sala"> | string
  limiteHorasReserva?: Prisma.IntFilter<"Sala"> | number
  ativa?: Prisma.BoolFilter<"Sala"> | boolean
  idUsuarioCriador?: Prisma.IntFilter<"Sala"> | number
}

export type SalaCreateWithoutEspacosInput = {
  nomeSala: string
  mapa: string
  limiteHorasReserva: number
  ativa?: boolean
  criador: Prisma.UsuarioCreateNestedOneWithoutSalasCriadasInput
}

export type SalaUncheckedCreateWithoutEspacosInput = {
  idSala?: number
  nomeSala: string
  mapa: string
  limiteHorasReserva: number
  ativa?: boolean
  idUsuarioCriador: number
}

export type SalaCreateOrConnectWithoutEspacosInput = {
  where: Prisma.SalaWhereUniqueInput
  create: Prisma.XOR<Prisma.SalaCreateWithoutEspacosInput, Prisma.SalaUncheckedCreateWithoutEspacosInput>
}

export type SalaUpsertWithoutEspacosInput = {
  update: Prisma.XOR<Prisma.SalaUpdateWithoutEspacosInput, Prisma.SalaUncheckedUpdateWithoutEspacosInput>
  create: Prisma.XOR<Prisma.SalaCreateWithoutEspacosInput, Prisma.SalaUncheckedCreateWithoutEspacosInput>
  where?: Prisma.SalaWhereInput
}

export type SalaUpdateToOneWithWhereWithoutEspacosInput = {
  where?: Prisma.SalaWhereInput
  data: Prisma.XOR<Prisma.SalaUpdateWithoutEspacosInput, Prisma.SalaUncheckedUpdateWithoutEspacosInput>
}

export type SalaUpdateWithoutEspacosInput = {
  nomeSala?: Prisma.StringFieldUpdateOperationsInput | string
  mapa?: Prisma.StringFieldUpdateOperationsInput | string
  limiteHorasReserva?: Prisma.IntFieldUpdateOperationsInput | number
  ativa?: Prisma.BoolFieldUpdateOperationsInput | boolean
  criador?: Prisma.UsuarioUpdateOneRequiredWithoutSalasCriadasNestedInput
}

export type SalaUncheckedUpdateWithoutEspacosInput = {
  idSala?: Prisma.IntFieldUpdateOperationsInput | number
  nomeSala?: Prisma.StringFieldUpdateOperationsInput | string
  mapa?: Prisma.StringFieldUpdateOperationsInput | string
  limiteHorasReserva?: Prisma.IntFieldUpdateOperationsInput | number
  ativa?: Prisma.BoolFieldUpdateOperationsInput | boolean
  idUsuarioCriador?: Prisma.IntFieldUpdateOperationsInput | number
}

export type SalaCreateManyCriadorInput = {
  idSala?: number
  nomeSala: string
  mapa: string
  limiteHorasReserva: number
  ativa?: boolean
}

export type SalaUpdateWithoutCriadorInput = {
  nomeSala?: Prisma.StringFieldUpdateOperationsInput | string
  mapa?: Prisma.StringFieldUpdateOperationsInput | string
  limiteHorasReserva?: Prisma.IntFieldUpdateOperationsInput | number
  ativa?: Prisma.BoolFieldUpdateOperationsInput | boolean
  espacos?: Prisma.EspacoUpdateManyWithoutSalaNestedInput
}

export type SalaUncheckedUpdateWithoutCriadorInput = {
  idSala?: Prisma.IntFieldUpdateOperationsInput | number
  nomeSala?: Prisma.StringFieldUpdateOperationsInput | string
  mapa?: Prisma.StringFieldUpdateOperationsInput | string
  limiteHorasReserva?: Prisma.IntFieldUpdateOperationsInput | number
  ativa?: Prisma.BoolFieldUpdateOperationsInput | boolean
  espacos?: Prisma.EspacoUncheckedUpdateManyWithoutSalaNestedInput
}

export type SalaUncheckedUpdateManyWithoutCriadorInput = {
  idSala?: Prisma.IntFieldUpdateOperationsInput | number
  nomeSala?: Prisma.StringFieldUpdateOperationsInput | string
  mapa?: Prisma.StringFieldUpdateOperationsInput | string
  limiteHorasReserva?: Prisma.IntFieldUpdateOperationsInput | number
  ativa?: Prisma.BoolFieldUpdateOperationsInput | boolean
}


/**
 * Count Type SalaCountOutputType
 */

export type SalaCountOutputType = {
  espacos: number
}

export type SalaCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  espacos?: boolean | SalaCountOutputTypeCountEspacosArgs
}

/**
 * SalaCountOutputType without action
 */
export type SalaCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SalaCountOutputType
   */
  select?: Prisma.SalaCountOutputTypeSelect<ExtArgs> | null
}

/**
 * SalaCountOutputType without action
 */
export type SalaCountOutputTypeCountEspacosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EspacoWhereInput
}


export type SalaSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idSala?: boolean
  nomeSala?: boolean
  mapa?: boolean
  limiteHorasReserva?: boolean
  ativa?: boolean
  idUsuarioCriador?: boolean
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
  espacos?: boolean | Prisma.Sala$espacosArgs<ExtArgs>
  _count?: boolean | Prisma.SalaCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["sala"]>

export type SalaSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idSala?: boolean
  nomeSala?: boolean
  mapa?: boolean
  limiteHorasReserva?: boolean
  ativa?: boolean
  idUsuarioCriador?: boolean
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
}, ExtArgs["result"]["sala"]>

export type SalaSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idSala?: boolean
  nomeSala?: boolean
  mapa?: boolean
  limiteHorasReserva?: boolean
  ativa?: boolean
  idUsuarioCriador?: boolean
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
}, ExtArgs["result"]["sala"]>

export type SalaSelectScalar = {
  idSala?: boolean
  nomeSala?: boolean
  mapa?: boolean
  limiteHorasReserva?: boolean
  ativa?: boolean
  idUsuarioCriador?: boolean
}

export type SalaOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"idSala" | "nomeSala" | "mapa" | "limiteHorasReserva" | "ativa" | "idUsuarioCriador", ExtArgs["result"]["sala"]>
export type SalaInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
  espacos?: boolean | Prisma.Sala$espacosArgs<ExtArgs>
  _count?: boolean | Prisma.SalaCountOutputTypeDefaultArgs<ExtArgs>
}
export type SalaIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
}
export type SalaIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
}

export type $SalaPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Sala"
  objects: {
    criador: Prisma.$UsuarioPayload<ExtArgs>
    espacos: Prisma.$EspacoPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    idSala: number
    nomeSala: string
    mapa: string
    limiteHorasReserva: number
    ativa: boolean
    idUsuarioCriador: number
  }, ExtArgs["result"]["sala"]>
  composites: {}
}

export type SalaGetPayload<S extends boolean | null | undefined | SalaDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$SalaPayload, S>

export type SalaCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<SalaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: SalaCountAggregateInputType | true
  }

export interface SalaDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Sala'], meta: { name: 'Sala' } }
  /**
   * Find zero or one Sala that matches the filter.
   * @param {SalaFindUniqueArgs} args - Arguments to find a Sala
   * @example
   * // Get one Sala
   * const sala = await prisma.sala.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends SalaFindUniqueArgs>(args: Prisma.SelectSubset<T, SalaFindUniqueArgs<ExtArgs>>): Prisma.Prisma__SalaClient<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Sala that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {SalaFindUniqueOrThrowArgs} args - Arguments to find a Sala
   * @example
   * // Get one Sala
   * const sala = await prisma.sala.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends SalaFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, SalaFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__SalaClient<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Sala that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SalaFindFirstArgs} args - Arguments to find a Sala
   * @example
   * // Get one Sala
   * const sala = await prisma.sala.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends SalaFindFirstArgs>(args?: Prisma.SelectSubset<T, SalaFindFirstArgs<ExtArgs>>): Prisma.Prisma__SalaClient<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Sala that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SalaFindFirstOrThrowArgs} args - Arguments to find a Sala
   * @example
   * // Get one Sala
   * const sala = await prisma.sala.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends SalaFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, SalaFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__SalaClient<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Salas that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SalaFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Salas
   * const salas = await prisma.sala.findMany()
   * 
   * // Get first 10 Salas
   * const salas = await prisma.sala.findMany({ take: 10 })
   * 
   * // Only select the `idSala`
   * const salaWithIdSalaOnly = await prisma.sala.findMany({ select: { idSala: true } })
   * 
   */
  findMany<T extends SalaFindManyArgs>(args?: Prisma.SelectSubset<T, SalaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Sala.
   * @param {SalaCreateArgs} args - Arguments to create a Sala.
   * @example
   * // Create one Sala
   * const Sala = await prisma.sala.create({
   *   data: {
   *     // ... data to create a Sala
   *   }
   * })
   * 
   */
  create<T extends SalaCreateArgs>(args: Prisma.SelectSubset<T, SalaCreateArgs<ExtArgs>>): Prisma.Prisma__SalaClient<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Salas.
   * @param {SalaCreateManyArgs} args - Arguments to create many Salas.
   * @example
   * // Create many Salas
   * const sala = await prisma.sala.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends SalaCreateManyArgs>(args?: Prisma.SelectSubset<T, SalaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Salas and returns the data saved in the database.
   * @param {SalaCreateManyAndReturnArgs} args - Arguments to create many Salas.
   * @example
   * // Create many Salas
   * const sala = await prisma.sala.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Salas and only return the `idSala`
   * const salaWithIdSalaOnly = await prisma.sala.createManyAndReturn({
   *   select: { idSala: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends SalaCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, SalaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Sala.
   * @param {SalaDeleteArgs} args - Arguments to delete one Sala.
   * @example
   * // Delete one Sala
   * const Sala = await prisma.sala.delete({
   *   where: {
   *     // ... filter to delete one Sala
   *   }
   * })
   * 
   */
  delete<T extends SalaDeleteArgs>(args: Prisma.SelectSubset<T, SalaDeleteArgs<ExtArgs>>): Prisma.Prisma__SalaClient<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Sala.
   * @param {SalaUpdateArgs} args - Arguments to update one Sala.
   * @example
   * // Update one Sala
   * const sala = await prisma.sala.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends SalaUpdateArgs>(args: Prisma.SelectSubset<T, SalaUpdateArgs<ExtArgs>>): Prisma.Prisma__SalaClient<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Salas.
   * @param {SalaDeleteManyArgs} args - Arguments to filter Salas to delete.
   * @example
   * // Delete a few Salas
   * const { count } = await prisma.sala.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends SalaDeleteManyArgs>(args?: Prisma.SelectSubset<T, SalaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Salas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SalaUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Salas
   * const sala = await prisma.sala.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends SalaUpdateManyArgs>(args: Prisma.SelectSubset<T, SalaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Salas and returns the data updated in the database.
   * @param {SalaUpdateManyAndReturnArgs} args - Arguments to update many Salas.
   * @example
   * // Update many Salas
   * const sala = await prisma.sala.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Salas and only return the `idSala`
   * const salaWithIdSalaOnly = await prisma.sala.updateManyAndReturn({
   *   select: { idSala: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends SalaUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, SalaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Sala.
   * @param {SalaUpsertArgs} args - Arguments to update or create a Sala.
   * @example
   * // Update or create a Sala
   * const sala = await prisma.sala.upsert({
   *   create: {
   *     // ... data to create a Sala
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Sala we want to update
   *   }
   * })
   */
  upsert<T extends SalaUpsertArgs>(args: Prisma.SelectSubset<T, SalaUpsertArgs<ExtArgs>>): Prisma.Prisma__SalaClient<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Salas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SalaCountArgs} args - Arguments to filter Salas to count.
   * @example
   * // Count the number of Salas
   * const count = await prisma.sala.count({
   *   where: {
   *     // ... the filter for the Salas we want to count
   *   }
   * })
  **/
  count<T extends SalaCountArgs>(
    args?: Prisma.Subset<T, SalaCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], SalaCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Sala.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SalaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends SalaAggregateArgs>(args: Prisma.Subset<T, SalaAggregateArgs>): Prisma.PrismaPromise<GetSalaAggregateType<T>>

  /**
   * Group by Sala.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SalaGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends SalaGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: SalaGroupByArgs['orderBy'] }
      : { orderBy?: SalaGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, SalaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Sala model
 */
readonly fields: SalaFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Sala.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__SalaClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  criador<T extends Prisma.UsuarioDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UsuarioDefaultArgs<ExtArgs>>): Prisma.Prisma__UsuarioClient<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  espacos<T extends Prisma.Sala$espacosArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Sala$espacosArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EspacoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Sala model
 */
export interface SalaFieldRefs {
  readonly idSala: Prisma.FieldRef<"Sala", 'Int'>
  readonly nomeSala: Prisma.FieldRef<"Sala", 'String'>
  readonly mapa: Prisma.FieldRef<"Sala", 'String'>
  readonly limiteHorasReserva: Prisma.FieldRef<"Sala", 'Int'>
  readonly ativa: Prisma.FieldRef<"Sala", 'Boolean'>
  readonly idUsuarioCriador: Prisma.FieldRef<"Sala", 'Int'>
}
    

// Custom InputTypes
/**
 * Sala findUnique
 */
export type SalaFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaInclude<ExtArgs> | null
  /**
   * Filter, which Sala to fetch.
   */
  where: Prisma.SalaWhereUniqueInput
}

/**
 * Sala findUniqueOrThrow
 */
export type SalaFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaInclude<ExtArgs> | null
  /**
   * Filter, which Sala to fetch.
   */
  where: Prisma.SalaWhereUniqueInput
}

/**
 * Sala findFirst
 */
export type SalaFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaInclude<ExtArgs> | null
  /**
   * Filter, which Sala to fetch.
   */
  where?: Prisma.SalaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Salas to fetch.
   */
  orderBy?: Prisma.SalaOrderByWithRelationInput | Prisma.SalaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Salas.
   */
  cursor?: Prisma.SalaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Salas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Salas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Salas.
   */
  distinct?: Prisma.SalaScalarFieldEnum | Prisma.SalaScalarFieldEnum[]
}

/**
 * Sala findFirstOrThrow
 */
export type SalaFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaInclude<ExtArgs> | null
  /**
   * Filter, which Sala to fetch.
   */
  where?: Prisma.SalaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Salas to fetch.
   */
  orderBy?: Prisma.SalaOrderByWithRelationInput | Prisma.SalaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Salas.
   */
  cursor?: Prisma.SalaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Salas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Salas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Salas.
   */
  distinct?: Prisma.SalaScalarFieldEnum | Prisma.SalaScalarFieldEnum[]
}

/**
 * Sala findMany
 */
export type SalaFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaInclude<ExtArgs> | null
  /**
   * Filter, which Salas to fetch.
   */
  where?: Prisma.SalaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Salas to fetch.
   */
  orderBy?: Prisma.SalaOrderByWithRelationInput | Prisma.SalaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Salas.
   */
  cursor?: Prisma.SalaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Salas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Salas.
   */
  skip?: number
  distinct?: Prisma.SalaScalarFieldEnum | Prisma.SalaScalarFieldEnum[]
}

/**
 * Sala create
 */
export type SalaCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaInclude<ExtArgs> | null
  /**
   * The data needed to create a Sala.
   */
  data: Prisma.XOR<Prisma.SalaCreateInput, Prisma.SalaUncheckedCreateInput>
}

/**
 * Sala createMany
 */
export type SalaCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Salas.
   */
  data: Prisma.SalaCreateManyInput | Prisma.SalaCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Sala createManyAndReturn
 */
export type SalaCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * The data used to create many Salas.
   */
  data: Prisma.SalaCreateManyInput | Prisma.SalaCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Sala update
 */
export type SalaUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaInclude<ExtArgs> | null
  /**
   * The data needed to update a Sala.
   */
  data: Prisma.XOR<Prisma.SalaUpdateInput, Prisma.SalaUncheckedUpdateInput>
  /**
   * Choose, which Sala to update.
   */
  where: Prisma.SalaWhereUniqueInput
}

/**
 * Sala updateMany
 */
export type SalaUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Salas.
   */
  data: Prisma.XOR<Prisma.SalaUpdateManyMutationInput, Prisma.SalaUncheckedUpdateManyInput>
  /**
   * Filter which Salas to update
   */
  where?: Prisma.SalaWhereInput
  /**
   * Limit how many Salas to update.
   */
  limit?: number
}

/**
 * Sala updateManyAndReturn
 */
export type SalaUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * The data used to update Salas.
   */
  data: Prisma.XOR<Prisma.SalaUpdateManyMutationInput, Prisma.SalaUncheckedUpdateManyInput>
  /**
   * Filter which Salas to update
   */
  where?: Prisma.SalaWhereInput
  /**
   * Limit how many Salas to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Sala upsert
 */
export type SalaUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaInclude<ExtArgs> | null
  /**
   * The filter to search for the Sala to update in case it exists.
   */
  where: Prisma.SalaWhereUniqueInput
  /**
   * In case the Sala found by the `where` argument doesn't exist, create a new Sala with this data.
   */
  create: Prisma.XOR<Prisma.SalaCreateInput, Prisma.SalaUncheckedCreateInput>
  /**
   * In case the Sala was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.SalaUpdateInput, Prisma.SalaUncheckedUpdateInput>
}

/**
 * Sala delete
 */
export type SalaDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaInclude<ExtArgs> | null
  /**
   * Filter which Sala to delete.
   */
  where: Prisma.SalaWhereUniqueInput
}

/**
 * Sala deleteMany
 */
export type SalaDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Salas to delete
   */
  where?: Prisma.SalaWhereInput
  /**
   * Limit how many Salas to delete.
   */
  limit?: number
}

/**
 * Sala.espacos
 */
export type Sala$espacosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Espaco
   */
  select?: Prisma.EspacoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Espaco
   */
  omit?: Prisma.EspacoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EspacoInclude<ExtArgs> | null
  where?: Prisma.EspacoWhereInput
  orderBy?: Prisma.EspacoOrderByWithRelationInput | Prisma.EspacoOrderByWithRelationInput[]
  cursor?: Prisma.EspacoWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EspacoScalarFieldEnum | Prisma.EspacoScalarFieldEnum[]
}

/**
 * Sala without action
 */
export type SalaDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaInclude<ExtArgs> | null
}
