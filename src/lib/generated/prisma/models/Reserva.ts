
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Reserva` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Reserva
 * 
 */
export type ReservaModel = runtime.Types.Result.DefaultSelection<Prisma.$ReservaPayload>

export type AggregateReserva = {
  _count: ReservaCountAggregateOutputType | null
  _avg: ReservaAvgAggregateOutputType | null
  _sum: ReservaSumAggregateOutputType | null
  _min: ReservaMinAggregateOutputType | null
  _max: ReservaMaxAggregateOutputType | null
}

export type ReservaAvgAggregateOutputType = {
  idReserva: number | null
  idUsuarioCriador: number | null
  idEspacoReservado: number | null
}

export type ReservaSumAggregateOutputType = {
  idReserva: number | null
  idUsuarioCriador: number | null
  idEspacoReservado: number | null
}

export type ReservaMinAggregateOutputType = {
  idReserva: number | null
  motivo: string | null
  horaInicio: Date | null
  horaFim: Date | null
  situacao: string | null
  idUsuarioCriador: number | null
  idEspacoReservado: number | null
}

export type ReservaMaxAggregateOutputType = {
  idReserva: number | null
  motivo: string | null
  horaInicio: Date | null
  horaFim: Date | null
  situacao: string | null
  idUsuarioCriador: number | null
  idEspacoReservado: number | null
}

export type ReservaCountAggregateOutputType = {
  idReserva: number
  motivo: number
  horaInicio: number
  horaFim: number
  situacao: number
  idUsuarioCriador: number
  idEspacoReservado: number
  _all: number
}


export type ReservaAvgAggregateInputType = {
  idReserva?: true
  idUsuarioCriador?: true
  idEspacoReservado?: true
}

export type ReservaSumAggregateInputType = {
  idReserva?: true
  idUsuarioCriador?: true
  idEspacoReservado?: true
}

export type ReservaMinAggregateInputType = {
  idReserva?: true
  motivo?: true
  horaInicio?: true
  horaFim?: true
  situacao?: true
  idUsuarioCriador?: true
  idEspacoReservado?: true
}

export type ReservaMaxAggregateInputType = {
  idReserva?: true
  motivo?: true
  horaInicio?: true
  horaFim?: true
  situacao?: true
  idUsuarioCriador?: true
  idEspacoReservado?: true
}

export type ReservaCountAggregateInputType = {
  idReserva?: true
  motivo?: true
  horaInicio?: true
  horaFim?: true
  situacao?: true
  idUsuarioCriador?: true
  idEspacoReservado?: true
  _all?: true
}

export type ReservaAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Reserva to aggregate.
   */
  where?: Prisma.ReservaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Reservas to fetch.
   */
  orderBy?: Prisma.ReservaOrderByWithRelationInput | Prisma.ReservaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ReservaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Reservas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Reservas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Reservas
  **/
  _count?: true | ReservaCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ReservaAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ReservaSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ReservaMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ReservaMaxAggregateInputType
}

export type GetReservaAggregateType<T extends ReservaAggregateArgs> = {
      [P in keyof T & keyof AggregateReserva]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateReserva[P]>
    : Prisma.GetScalarType<T[P], AggregateReserva[P]>
}




export type ReservaGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ReservaWhereInput
  orderBy?: Prisma.ReservaOrderByWithAggregationInput | Prisma.ReservaOrderByWithAggregationInput[]
  by: Prisma.ReservaScalarFieldEnum[] | Prisma.ReservaScalarFieldEnum
  having?: Prisma.ReservaScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ReservaCountAggregateInputType | true
  _avg?: ReservaAvgAggregateInputType
  _sum?: ReservaSumAggregateInputType
  _min?: ReservaMinAggregateInputType
  _max?: ReservaMaxAggregateInputType
}

export type ReservaGroupByOutputType = {
  idReserva: number
  motivo: string
  horaInicio: Date
  horaFim: Date
  situacao: string
  idUsuarioCriador: number
  idEspacoReservado: number
  _count: ReservaCountAggregateOutputType | null
  _avg: ReservaAvgAggregateOutputType | null
  _sum: ReservaSumAggregateOutputType | null
  _min: ReservaMinAggregateOutputType | null
  _max: ReservaMaxAggregateOutputType | null
}

type GetReservaGroupByPayload<T extends ReservaGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ReservaGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ReservaGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ReservaGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ReservaGroupByOutputType[P]>
      }
    >
  >



export type ReservaWhereInput = {
  AND?: Prisma.ReservaWhereInput | Prisma.ReservaWhereInput[]
  OR?: Prisma.ReservaWhereInput[]
  NOT?: Prisma.ReservaWhereInput | Prisma.ReservaWhereInput[]
  idReserva?: Prisma.IntFilter<"Reserva"> | number
  motivo?: Prisma.StringFilter<"Reserva"> | string
  horaInicio?: Prisma.DateTimeFilter<"Reserva"> | Date | string
  horaFim?: Prisma.DateTimeFilter<"Reserva"> | Date | string
  situacao?: Prisma.StringFilter<"Reserva"> | string
  idUsuarioCriador?: Prisma.IntFilter<"Reserva"> | number
  idEspacoReservado?: Prisma.IntFilter<"Reserva"> | number
  criador?: Prisma.XOR<Prisma.UsuarioScalarRelationFilter, Prisma.UsuarioWhereInput>
  espaco?: Prisma.XOR<Prisma.EspacoScalarRelationFilter, Prisma.EspacoWhereInput>
}

export type ReservaOrderByWithRelationInput = {
  idReserva?: Prisma.SortOrder
  motivo?: Prisma.SortOrder
  horaInicio?: Prisma.SortOrder
  horaFim?: Prisma.SortOrder
  situacao?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
  idEspacoReservado?: Prisma.SortOrder
  criador?: Prisma.UsuarioOrderByWithRelationInput
  espaco?: Prisma.EspacoOrderByWithRelationInput
}

export type ReservaWhereUniqueInput = Prisma.AtLeast<{
  idReserva?: number
  AND?: Prisma.ReservaWhereInput | Prisma.ReservaWhereInput[]
  OR?: Prisma.ReservaWhereInput[]
  NOT?: Prisma.ReservaWhereInput | Prisma.ReservaWhereInput[]
  motivo?: Prisma.StringFilter<"Reserva"> | string
  horaInicio?: Prisma.DateTimeFilter<"Reserva"> | Date | string
  horaFim?: Prisma.DateTimeFilter<"Reserva"> | Date | string
  situacao?: Prisma.StringFilter<"Reserva"> | string
  idUsuarioCriador?: Prisma.IntFilter<"Reserva"> | number
  idEspacoReservado?: Prisma.IntFilter<"Reserva"> | number
  criador?: Prisma.XOR<Prisma.UsuarioScalarRelationFilter, Prisma.UsuarioWhereInput>
  espaco?: Prisma.XOR<Prisma.EspacoScalarRelationFilter, Prisma.EspacoWhereInput>
}, "idReserva">

export type ReservaOrderByWithAggregationInput = {
  idReserva?: Prisma.SortOrder
  motivo?: Prisma.SortOrder
  horaInicio?: Prisma.SortOrder
  horaFim?: Prisma.SortOrder
  situacao?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
  idEspacoReservado?: Prisma.SortOrder
  _count?: Prisma.ReservaCountOrderByAggregateInput
  _avg?: Prisma.ReservaAvgOrderByAggregateInput
  _max?: Prisma.ReservaMaxOrderByAggregateInput
  _min?: Prisma.ReservaMinOrderByAggregateInput
  _sum?: Prisma.ReservaSumOrderByAggregateInput
}

export type ReservaScalarWhereWithAggregatesInput = {
  AND?: Prisma.ReservaScalarWhereWithAggregatesInput | Prisma.ReservaScalarWhereWithAggregatesInput[]
  OR?: Prisma.ReservaScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ReservaScalarWhereWithAggregatesInput | Prisma.ReservaScalarWhereWithAggregatesInput[]
  idReserva?: Prisma.IntWithAggregatesFilter<"Reserva"> | number
  motivo?: Prisma.StringWithAggregatesFilter<"Reserva"> | string
  horaInicio?: Prisma.DateTimeWithAggregatesFilter<"Reserva"> | Date | string
  horaFim?: Prisma.DateTimeWithAggregatesFilter<"Reserva"> | Date | string
  situacao?: Prisma.StringWithAggregatesFilter<"Reserva"> | string
  idUsuarioCriador?: Prisma.IntWithAggregatesFilter<"Reserva"> | number
  idEspacoReservado?: Prisma.IntWithAggregatesFilter<"Reserva"> | number
}

export type ReservaCreateInput = {
  motivo: string
  horaInicio: Date | string
  horaFim: Date | string
  situacao: string
  criador: Prisma.UsuarioCreateNestedOneWithoutReservasCriadasInput
  espaco: Prisma.EspacoCreateNestedOneWithoutReservasInput
}

export type ReservaUncheckedCreateInput = {
  idReserva?: number
  motivo: string
  horaInicio: Date | string
  horaFim: Date | string
  situacao: string
  idUsuarioCriador: number
  idEspacoReservado: number
}

export type ReservaUpdateInput = {
  motivo?: Prisma.StringFieldUpdateOperationsInput | string
  horaInicio?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  horaFim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  situacao?: Prisma.StringFieldUpdateOperationsInput | string
  criador?: Prisma.UsuarioUpdateOneRequiredWithoutReservasCriadasNestedInput
  espaco?: Prisma.EspacoUpdateOneRequiredWithoutReservasNestedInput
}

export type ReservaUncheckedUpdateInput = {
  idReserva?: Prisma.IntFieldUpdateOperationsInput | number
  motivo?: Prisma.StringFieldUpdateOperationsInput | string
  horaInicio?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  horaFim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  situacao?: Prisma.StringFieldUpdateOperationsInput | string
  idUsuarioCriador?: Prisma.IntFieldUpdateOperationsInput | number
  idEspacoReservado?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ReservaCreateManyInput = {
  idReserva?: number
  motivo: string
  horaInicio: Date | string
  horaFim: Date | string
  situacao: string
  idUsuarioCriador: number
  idEspacoReservado: number
}

export type ReservaUpdateManyMutationInput = {
  motivo?: Prisma.StringFieldUpdateOperationsInput | string
  horaInicio?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  horaFim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  situacao?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ReservaUncheckedUpdateManyInput = {
  idReserva?: Prisma.IntFieldUpdateOperationsInput | number
  motivo?: Prisma.StringFieldUpdateOperationsInput | string
  horaInicio?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  horaFim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  situacao?: Prisma.StringFieldUpdateOperationsInput | string
  idUsuarioCriador?: Prisma.IntFieldUpdateOperationsInput | number
  idEspacoReservado?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ReservaListRelationFilter = {
  every?: Prisma.ReservaWhereInput
  some?: Prisma.ReservaWhereInput
  none?: Prisma.ReservaWhereInput
}

export type ReservaOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ReservaCountOrderByAggregateInput = {
  idReserva?: Prisma.SortOrder
  motivo?: Prisma.SortOrder
  horaInicio?: Prisma.SortOrder
  horaFim?: Prisma.SortOrder
  situacao?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
  idEspacoReservado?: Prisma.SortOrder
}

export type ReservaAvgOrderByAggregateInput = {
  idReserva?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
  idEspacoReservado?: Prisma.SortOrder
}

export type ReservaMaxOrderByAggregateInput = {
  idReserva?: Prisma.SortOrder
  motivo?: Prisma.SortOrder
  horaInicio?: Prisma.SortOrder
  horaFim?: Prisma.SortOrder
  situacao?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
  idEspacoReservado?: Prisma.SortOrder
}

export type ReservaMinOrderByAggregateInput = {
  idReserva?: Prisma.SortOrder
  motivo?: Prisma.SortOrder
  horaInicio?: Prisma.SortOrder
  horaFim?: Prisma.SortOrder
  situacao?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
  idEspacoReservado?: Prisma.SortOrder
}

export type ReservaSumOrderByAggregateInput = {
  idReserva?: Prisma.SortOrder
  idUsuarioCriador?: Prisma.SortOrder
  idEspacoReservado?: Prisma.SortOrder
}

export type ReservaCreateNestedManyWithoutCriadorInput = {
  create?: Prisma.XOR<Prisma.ReservaCreateWithoutCriadorInput, Prisma.ReservaUncheckedCreateWithoutCriadorInput> | Prisma.ReservaCreateWithoutCriadorInput[] | Prisma.ReservaUncheckedCreateWithoutCriadorInput[]
  connectOrCreate?: Prisma.ReservaCreateOrConnectWithoutCriadorInput | Prisma.ReservaCreateOrConnectWithoutCriadorInput[]
  createMany?: Prisma.ReservaCreateManyCriadorInputEnvelope
  connect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
}

export type ReservaUncheckedCreateNestedManyWithoutCriadorInput = {
  create?: Prisma.XOR<Prisma.ReservaCreateWithoutCriadorInput, Prisma.ReservaUncheckedCreateWithoutCriadorInput> | Prisma.ReservaCreateWithoutCriadorInput[] | Prisma.ReservaUncheckedCreateWithoutCriadorInput[]
  connectOrCreate?: Prisma.ReservaCreateOrConnectWithoutCriadorInput | Prisma.ReservaCreateOrConnectWithoutCriadorInput[]
  createMany?: Prisma.ReservaCreateManyCriadorInputEnvelope
  connect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
}

export type ReservaUpdateManyWithoutCriadorNestedInput = {
  create?: Prisma.XOR<Prisma.ReservaCreateWithoutCriadorInput, Prisma.ReservaUncheckedCreateWithoutCriadorInput> | Prisma.ReservaCreateWithoutCriadorInput[] | Prisma.ReservaUncheckedCreateWithoutCriadorInput[]
  connectOrCreate?: Prisma.ReservaCreateOrConnectWithoutCriadorInput | Prisma.ReservaCreateOrConnectWithoutCriadorInput[]
  upsert?: Prisma.ReservaUpsertWithWhereUniqueWithoutCriadorInput | Prisma.ReservaUpsertWithWhereUniqueWithoutCriadorInput[]
  createMany?: Prisma.ReservaCreateManyCriadorInputEnvelope
  set?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  disconnect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  delete?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  connect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  update?: Prisma.ReservaUpdateWithWhereUniqueWithoutCriadorInput | Prisma.ReservaUpdateWithWhereUniqueWithoutCriadorInput[]
  updateMany?: Prisma.ReservaUpdateManyWithWhereWithoutCriadorInput | Prisma.ReservaUpdateManyWithWhereWithoutCriadorInput[]
  deleteMany?: Prisma.ReservaScalarWhereInput | Prisma.ReservaScalarWhereInput[]
}

export type ReservaUncheckedUpdateManyWithoutCriadorNestedInput = {
  create?: Prisma.XOR<Prisma.ReservaCreateWithoutCriadorInput, Prisma.ReservaUncheckedCreateWithoutCriadorInput> | Prisma.ReservaCreateWithoutCriadorInput[] | Prisma.ReservaUncheckedCreateWithoutCriadorInput[]
  connectOrCreate?: Prisma.ReservaCreateOrConnectWithoutCriadorInput | Prisma.ReservaCreateOrConnectWithoutCriadorInput[]
  upsert?: Prisma.ReservaUpsertWithWhereUniqueWithoutCriadorInput | Prisma.ReservaUpsertWithWhereUniqueWithoutCriadorInput[]
  createMany?: Prisma.ReservaCreateManyCriadorInputEnvelope
  set?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  disconnect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  delete?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  connect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  update?: Prisma.ReservaUpdateWithWhereUniqueWithoutCriadorInput | Prisma.ReservaUpdateWithWhereUniqueWithoutCriadorInput[]
  updateMany?: Prisma.ReservaUpdateManyWithWhereWithoutCriadorInput | Prisma.ReservaUpdateManyWithWhereWithoutCriadorInput[]
  deleteMany?: Prisma.ReservaScalarWhereInput | Prisma.ReservaScalarWhereInput[]
}

export type ReservaCreateNestedManyWithoutEspacoInput = {
  create?: Prisma.XOR<Prisma.ReservaCreateWithoutEspacoInput, Prisma.ReservaUncheckedCreateWithoutEspacoInput> | Prisma.ReservaCreateWithoutEspacoInput[] | Prisma.ReservaUncheckedCreateWithoutEspacoInput[]
  connectOrCreate?: Prisma.ReservaCreateOrConnectWithoutEspacoInput | Prisma.ReservaCreateOrConnectWithoutEspacoInput[]
  createMany?: Prisma.ReservaCreateManyEspacoInputEnvelope
  connect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
}

export type ReservaUncheckedCreateNestedManyWithoutEspacoInput = {
  create?: Prisma.XOR<Prisma.ReservaCreateWithoutEspacoInput, Prisma.ReservaUncheckedCreateWithoutEspacoInput> | Prisma.ReservaCreateWithoutEspacoInput[] | Prisma.ReservaUncheckedCreateWithoutEspacoInput[]
  connectOrCreate?: Prisma.ReservaCreateOrConnectWithoutEspacoInput | Prisma.ReservaCreateOrConnectWithoutEspacoInput[]
  createMany?: Prisma.ReservaCreateManyEspacoInputEnvelope
  connect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
}

export type ReservaUpdateManyWithoutEspacoNestedInput = {
  create?: Prisma.XOR<Prisma.ReservaCreateWithoutEspacoInput, Prisma.ReservaUncheckedCreateWithoutEspacoInput> | Prisma.ReservaCreateWithoutEspacoInput[] | Prisma.ReservaUncheckedCreateWithoutEspacoInput[]
  connectOrCreate?: Prisma.ReservaCreateOrConnectWithoutEspacoInput | Prisma.ReservaCreateOrConnectWithoutEspacoInput[]
  upsert?: Prisma.ReservaUpsertWithWhereUniqueWithoutEspacoInput | Prisma.ReservaUpsertWithWhereUniqueWithoutEspacoInput[]
  createMany?: Prisma.ReservaCreateManyEspacoInputEnvelope
  set?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  disconnect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  delete?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  connect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  update?: Prisma.ReservaUpdateWithWhereUniqueWithoutEspacoInput | Prisma.ReservaUpdateWithWhereUniqueWithoutEspacoInput[]
  updateMany?: Prisma.ReservaUpdateManyWithWhereWithoutEspacoInput | Prisma.ReservaUpdateManyWithWhereWithoutEspacoInput[]
  deleteMany?: Prisma.ReservaScalarWhereInput | Prisma.ReservaScalarWhereInput[]
}

export type ReservaUncheckedUpdateManyWithoutEspacoNestedInput = {
  create?: Prisma.XOR<Prisma.ReservaCreateWithoutEspacoInput, Prisma.ReservaUncheckedCreateWithoutEspacoInput> | Prisma.ReservaCreateWithoutEspacoInput[] | Prisma.ReservaUncheckedCreateWithoutEspacoInput[]
  connectOrCreate?: Prisma.ReservaCreateOrConnectWithoutEspacoInput | Prisma.ReservaCreateOrConnectWithoutEspacoInput[]
  upsert?: Prisma.ReservaUpsertWithWhereUniqueWithoutEspacoInput | Prisma.ReservaUpsertWithWhereUniqueWithoutEspacoInput[]
  createMany?: Prisma.ReservaCreateManyEspacoInputEnvelope
  set?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  disconnect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  delete?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  connect?: Prisma.ReservaWhereUniqueInput | Prisma.ReservaWhereUniqueInput[]
  update?: Prisma.ReservaUpdateWithWhereUniqueWithoutEspacoInput | Prisma.ReservaUpdateWithWhereUniqueWithoutEspacoInput[]
  updateMany?: Prisma.ReservaUpdateManyWithWhereWithoutEspacoInput | Prisma.ReservaUpdateManyWithWhereWithoutEspacoInput[]
  deleteMany?: Prisma.ReservaScalarWhereInput | Prisma.ReservaScalarWhereInput[]
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type ReservaCreateWithoutCriadorInput = {
  motivo: string
  horaInicio: Date | string
  horaFim: Date | string
  situacao: string
  espaco: Prisma.EspacoCreateNestedOneWithoutReservasInput
}

export type ReservaUncheckedCreateWithoutCriadorInput = {
  idReserva?: number
  motivo: string
  horaInicio: Date | string
  horaFim: Date | string
  situacao: string
  idEspacoReservado: number
}

export type ReservaCreateOrConnectWithoutCriadorInput = {
  where: Prisma.ReservaWhereUniqueInput
  create: Prisma.XOR<Prisma.ReservaCreateWithoutCriadorInput, Prisma.ReservaUncheckedCreateWithoutCriadorInput>
}

export type ReservaCreateManyCriadorInputEnvelope = {
  data: Prisma.ReservaCreateManyCriadorInput | Prisma.ReservaCreateManyCriadorInput[]
  skipDuplicates?: boolean
}

export type ReservaUpsertWithWhereUniqueWithoutCriadorInput = {
  where: Prisma.ReservaWhereUniqueInput
  update: Prisma.XOR<Prisma.ReservaUpdateWithoutCriadorInput, Prisma.ReservaUncheckedUpdateWithoutCriadorInput>
  create: Prisma.XOR<Prisma.ReservaCreateWithoutCriadorInput, Prisma.ReservaUncheckedCreateWithoutCriadorInput>
}

export type ReservaUpdateWithWhereUniqueWithoutCriadorInput = {
  where: Prisma.ReservaWhereUniqueInput
  data: Prisma.XOR<Prisma.ReservaUpdateWithoutCriadorInput, Prisma.ReservaUncheckedUpdateWithoutCriadorInput>
}

export type ReservaUpdateManyWithWhereWithoutCriadorInput = {
  where: Prisma.ReservaScalarWhereInput
  data: Prisma.XOR<Prisma.ReservaUpdateManyMutationInput, Prisma.ReservaUncheckedUpdateManyWithoutCriadorInput>
}

export type ReservaScalarWhereInput = {
  AND?: Prisma.ReservaScalarWhereInput | Prisma.ReservaScalarWhereInput[]
  OR?: Prisma.ReservaScalarWhereInput[]
  NOT?: Prisma.ReservaScalarWhereInput | Prisma.ReservaScalarWhereInput[]
  idReserva?: Prisma.IntFilter<"Reserva"> | number
  motivo?: Prisma.StringFilter<"Reserva"> | string
  horaInicio?: Prisma.DateTimeFilter<"Reserva"> | Date | string
  horaFim?: Prisma.DateTimeFilter<"Reserva"> | Date | string
  situacao?: Prisma.StringFilter<"Reserva"> | string
  idUsuarioCriador?: Prisma.IntFilter<"Reserva"> | number
  idEspacoReservado?: Prisma.IntFilter<"Reserva"> | number
}

export type ReservaCreateWithoutEspacoInput = {
  motivo: string
  horaInicio: Date | string
  horaFim: Date | string
  situacao: string
  criador: Prisma.UsuarioCreateNestedOneWithoutReservasCriadasInput
}

export type ReservaUncheckedCreateWithoutEspacoInput = {
  idReserva?: number
  motivo: string
  horaInicio: Date | string
  horaFim: Date | string
  situacao: string
  idUsuarioCriador: number
}

export type ReservaCreateOrConnectWithoutEspacoInput = {
  where: Prisma.ReservaWhereUniqueInput
  create: Prisma.XOR<Prisma.ReservaCreateWithoutEspacoInput, Prisma.ReservaUncheckedCreateWithoutEspacoInput>
}

export type ReservaCreateManyEspacoInputEnvelope = {
  data: Prisma.ReservaCreateManyEspacoInput | Prisma.ReservaCreateManyEspacoInput[]
  skipDuplicates?: boolean
}

export type ReservaUpsertWithWhereUniqueWithoutEspacoInput = {
  where: Prisma.ReservaWhereUniqueInput
  update: Prisma.XOR<Prisma.ReservaUpdateWithoutEspacoInput, Prisma.ReservaUncheckedUpdateWithoutEspacoInput>
  create: Prisma.XOR<Prisma.ReservaCreateWithoutEspacoInput, Prisma.ReservaUncheckedCreateWithoutEspacoInput>
}

export type ReservaUpdateWithWhereUniqueWithoutEspacoInput = {
  where: Prisma.ReservaWhereUniqueInput
  data: Prisma.XOR<Prisma.ReservaUpdateWithoutEspacoInput, Prisma.ReservaUncheckedUpdateWithoutEspacoInput>
}

export type ReservaUpdateManyWithWhereWithoutEspacoInput = {
  where: Prisma.ReservaScalarWhereInput
  data: Prisma.XOR<Prisma.ReservaUpdateManyMutationInput, Prisma.ReservaUncheckedUpdateManyWithoutEspacoInput>
}

export type ReservaCreateManyCriadorInput = {
  idReserva?: number
  motivo: string
  horaInicio: Date | string
  horaFim: Date | string
  situacao: string
  idEspacoReservado: number
}

export type ReservaUpdateWithoutCriadorInput = {
  motivo?: Prisma.StringFieldUpdateOperationsInput | string
  horaInicio?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  horaFim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  situacao?: Prisma.StringFieldUpdateOperationsInput | string
  espaco?: Prisma.EspacoUpdateOneRequiredWithoutReservasNestedInput
}

export type ReservaUncheckedUpdateWithoutCriadorInput = {
  idReserva?: Prisma.IntFieldUpdateOperationsInput | number
  motivo?: Prisma.StringFieldUpdateOperationsInput | string
  horaInicio?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  horaFim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  situacao?: Prisma.StringFieldUpdateOperationsInput | string
  idEspacoReservado?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ReservaUncheckedUpdateManyWithoutCriadorInput = {
  idReserva?: Prisma.IntFieldUpdateOperationsInput | number
  motivo?: Prisma.StringFieldUpdateOperationsInput | string
  horaInicio?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  horaFim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  situacao?: Prisma.StringFieldUpdateOperationsInput | string
  idEspacoReservado?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ReservaCreateManyEspacoInput = {
  idReserva?: number
  motivo: string
  horaInicio: Date | string
  horaFim: Date | string
  situacao: string
  idUsuarioCriador: number
}

export type ReservaUpdateWithoutEspacoInput = {
  motivo?: Prisma.StringFieldUpdateOperationsInput | string
  horaInicio?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  horaFim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  situacao?: Prisma.StringFieldUpdateOperationsInput | string
  criador?: Prisma.UsuarioUpdateOneRequiredWithoutReservasCriadasNestedInput
}

export type ReservaUncheckedUpdateWithoutEspacoInput = {
  idReserva?: Prisma.IntFieldUpdateOperationsInput | number
  motivo?: Prisma.StringFieldUpdateOperationsInput | string
  horaInicio?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  horaFim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  situacao?: Prisma.StringFieldUpdateOperationsInput | string
  idUsuarioCriador?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ReservaUncheckedUpdateManyWithoutEspacoInput = {
  idReserva?: Prisma.IntFieldUpdateOperationsInput | number
  motivo?: Prisma.StringFieldUpdateOperationsInput | string
  horaInicio?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  horaFim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  situacao?: Prisma.StringFieldUpdateOperationsInput | string
  idUsuarioCriador?: Prisma.IntFieldUpdateOperationsInput | number
}



export type ReservaSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idReserva?: boolean
  motivo?: boolean
  horaInicio?: boolean
  horaFim?: boolean
  situacao?: boolean
  idUsuarioCriador?: boolean
  idEspacoReservado?: boolean
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
  espaco?: boolean | Prisma.EspacoDefaultArgs<ExtArgs>
}, ExtArgs["result"]["reserva"]>

export type ReservaSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idReserva?: boolean
  motivo?: boolean
  horaInicio?: boolean
  horaFim?: boolean
  situacao?: boolean
  idUsuarioCriador?: boolean
  idEspacoReservado?: boolean
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
  espaco?: boolean | Prisma.EspacoDefaultArgs<ExtArgs>
}, ExtArgs["result"]["reserva"]>

export type ReservaSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idReserva?: boolean
  motivo?: boolean
  horaInicio?: boolean
  horaFim?: boolean
  situacao?: boolean
  idUsuarioCriador?: boolean
  idEspacoReservado?: boolean
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
  espaco?: boolean | Prisma.EspacoDefaultArgs<ExtArgs>
}, ExtArgs["result"]["reserva"]>

export type ReservaSelectScalar = {
  idReserva?: boolean
  motivo?: boolean
  horaInicio?: boolean
  horaFim?: boolean
  situacao?: boolean
  idUsuarioCriador?: boolean
  idEspacoReservado?: boolean
}

export type ReservaOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"idReserva" | "motivo" | "horaInicio" | "horaFim" | "situacao" | "idUsuarioCriador" | "idEspacoReservado", ExtArgs["result"]["reserva"]>
export type ReservaInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
  espaco?: boolean | Prisma.EspacoDefaultArgs<ExtArgs>
}
export type ReservaIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
  espaco?: boolean | Prisma.EspacoDefaultArgs<ExtArgs>
}
export type ReservaIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  criador?: boolean | Prisma.UsuarioDefaultArgs<ExtArgs>
  espaco?: boolean | Prisma.EspacoDefaultArgs<ExtArgs>
}

export type $ReservaPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Reserva"
  objects: {
    criador: Prisma.$UsuarioPayload<ExtArgs>
    espaco: Prisma.$EspacoPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    idReserva: number
    motivo: string
    horaInicio: Date
    horaFim: Date
    situacao: string
    idUsuarioCriador: number
    idEspacoReservado: number
  }, ExtArgs["result"]["reserva"]>
  composites: {}
}

export type ReservaGetPayload<S extends boolean | null | undefined | ReservaDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ReservaPayload, S>

export type ReservaCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ReservaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ReservaCountAggregateInputType | true
  }

export interface ReservaDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reserva'], meta: { name: 'Reserva' } }
  /**
   * Find zero or one Reserva that matches the filter.
   * @param {ReservaFindUniqueArgs} args - Arguments to find a Reserva
   * @example
   * // Get one Reserva
   * const reserva = await prisma.reserva.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ReservaFindUniqueArgs>(args: Prisma.SelectSubset<T, ReservaFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ReservaClient<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Reserva that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ReservaFindUniqueOrThrowArgs} args - Arguments to find a Reserva
   * @example
   * // Get one Reserva
   * const reserva = await prisma.reserva.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ReservaFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ReservaFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ReservaClient<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Reserva that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReservaFindFirstArgs} args - Arguments to find a Reserva
   * @example
   * // Get one Reserva
   * const reserva = await prisma.reserva.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ReservaFindFirstArgs>(args?: Prisma.SelectSubset<T, ReservaFindFirstArgs<ExtArgs>>): Prisma.Prisma__ReservaClient<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Reserva that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReservaFindFirstOrThrowArgs} args - Arguments to find a Reserva
   * @example
   * // Get one Reserva
   * const reserva = await prisma.reserva.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ReservaFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ReservaFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ReservaClient<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Reservas that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReservaFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Reservas
   * const reservas = await prisma.reserva.findMany()
   * 
   * // Get first 10 Reservas
   * const reservas = await prisma.reserva.findMany({ take: 10 })
   * 
   * // Only select the `idReserva`
   * const reservaWithIdReservaOnly = await prisma.reserva.findMany({ select: { idReserva: true } })
   * 
   */
  findMany<T extends ReservaFindManyArgs>(args?: Prisma.SelectSubset<T, ReservaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Reserva.
   * @param {ReservaCreateArgs} args - Arguments to create a Reserva.
   * @example
   * // Create one Reserva
   * const Reserva = await prisma.reserva.create({
   *   data: {
   *     // ... data to create a Reserva
   *   }
   * })
   * 
   */
  create<T extends ReservaCreateArgs>(args: Prisma.SelectSubset<T, ReservaCreateArgs<ExtArgs>>): Prisma.Prisma__ReservaClient<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Reservas.
   * @param {ReservaCreateManyArgs} args - Arguments to create many Reservas.
   * @example
   * // Create many Reservas
   * const reserva = await prisma.reserva.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ReservaCreateManyArgs>(args?: Prisma.SelectSubset<T, ReservaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Reservas and returns the data saved in the database.
   * @param {ReservaCreateManyAndReturnArgs} args - Arguments to create many Reservas.
   * @example
   * // Create many Reservas
   * const reserva = await prisma.reserva.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Reservas and only return the `idReserva`
   * const reservaWithIdReservaOnly = await prisma.reserva.createManyAndReturn({
   *   select: { idReserva: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ReservaCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ReservaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Reserva.
   * @param {ReservaDeleteArgs} args - Arguments to delete one Reserva.
   * @example
   * // Delete one Reserva
   * const Reserva = await prisma.reserva.delete({
   *   where: {
   *     // ... filter to delete one Reserva
   *   }
   * })
   * 
   */
  delete<T extends ReservaDeleteArgs>(args: Prisma.SelectSubset<T, ReservaDeleteArgs<ExtArgs>>): Prisma.Prisma__ReservaClient<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Reserva.
   * @param {ReservaUpdateArgs} args - Arguments to update one Reserva.
   * @example
   * // Update one Reserva
   * const reserva = await prisma.reserva.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ReservaUpdateArgs>(args: Prisma.SelectSubset<T, ReservaUpdateArgs<ExtArgs>>): Prisma.Prisma__ReservaClient<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Reservas.
   * @param {ReservaDeleteManyArgs} args - Arguments to filter Reservas to delete.
   * @example
   * // Delete a few Reservas
   * const { count } = await prisma.reserva.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ReservaDeleteManyArgs>(args?: Prisma.SelectSubset<T, ReservaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Reservas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReservaUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Reservas
   * const reserva = await prisma.reserva.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ReservaUpdateManyArgs>(args: Prisma.SelectSubset<T, ReservaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Reservas and returns the data updated in the database.
   * @param {ReservaUpdateManyAndReturnArgs} args - Arguments to update many Reservas.
   * @example
   * // Update many Reservas
   * const reserva = await prisma.reserva.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Reservas and only return the `idReserva`
   * const reservaWithIdReservaOnly = await prisma.reserva.updateManyAndReturn({
   *   select: { idReserva: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ReservaUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ReservaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Reserva.
   * @param {ReservaUpsertArgs} args - Arguments to update or create a Reserva.
   * @example
   * // Update or create a Reserva
   * const reserva = await prisma.reserva.upsert({
   *   create: {
   *     // ... data to create a Reserva
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Reserva we want to update
   *   }
   * })
   */
  upsert<T extends ReservaUpsertArgs>(args: Prisma.SelectSubset<T, ReservaUpsertArgs<ExtArgs>>): Prisma.Prisma__ReservaClient<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Reservas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReservaCountArgs} args - Arguments to filter Reservas to count.
   * @example
   * // Count the number of Reservas
   * const count = await prisma.reserva.count({
   *   where: {
   *     // ... the filter for the Reservas we want to count
   *   }
   * })
  **/
  count<T extends ReservaCountArgs>(
    args?: Prisma.Subset<T, ReservaCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ReservaCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Reserva.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReservaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ReservaAggregateArgs>(args: Prisma.Subset<T, ReservaAggregateArgs>): Prisma.PrismaPromise<GetReservaAggregateType<T>>

  /**
   * Group by Reserva.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReservaGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ReservaGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ReservaGroupByArgs['orderBy'] }
      : { orderBy?: ReservaGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ReservaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Reserva model
 */
readonly fields: ReservaFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Reserva.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ReservaClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  criador<T extends Prisma.UsuarioDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UsuarioDefaultArgs<ExtArgs>>): Prisma.Prisma__UsuarioClient<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  espaco<T extends Prisma.EspacoDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.EspacoDefaultArgs<ExtArgs>>): Prisma.Prisma__EspacoClient<runtime.Types.Result.GetResult<Prisma.$EspacoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Reserva model
 */
export interface ReservaFieldRefs {
  readonly idReserva: Prisma.FieldRef<"Reserva", 'Int'>
  readonly motivo: Prisma.FieldRef<"Reserva", 'String'>
  readonly horaInicio: Prisma.FieldRef<"Reserva", 'DateTime'>
  readonly horaFim: Prisma.FieldRef<"Reserva", 'DateTime'>
  readonly situacao: Prisma.FieldRef<"Reserva", 'String'>
  readonly idUsuarioCriador: Prisma.FieldRef<"Reserva", 'Int'>
  readonly idEspacoReservado: Prisma.FieldRef<"Reserva", 'Int'>
}
    

// Custom InputTypes
/**
 * Reserva findUnique
 */
export type ReservaFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaInclude<ExtArgs> | null
  /**
   * Filter, which Reserva to fetch.
   */
  where: Prisma.ReservaWhereUniqueInput
}

/**
 * Reserva findUniqueOrThrow
 */
export type ReservaFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaInclude<ExtArgs> | null
  /**
   * Filter, which Reserva to fetch.
   */
  where: Prisma.ReservaWhereUniqueInput
}

/**
 * Reserva findFirst
 */
export type ReservaFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaInclude<ExtArgs> | null
  /**
   * Filter, which Reserva to fetch.
   */
  where?: Prisma.ReservaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Reservas to fetch.
   */
  orderBy?: Prisma.ReservaOrderByWithRelationInput | Prisma.ReservaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Reservas.
   */
  cursor?: Prisma.ReservaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Reservas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Reservas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Reservas.
   */
  distinct?: Prisma.ReservaScalarFieldEnum | Prisma.ReservaScalarFieldEnum[]
}

/**
 * Reserva findFirstOrThrow
 */
export type ReservaFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaInclude<ExtArgs> | null
  /**
   * Filter, which Reserva to fetch.
   */
  where?: Prisma.ReservaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Reservas to fetch.
   */
  orderBy?: Prisma.ReservaOrderByWithRelationInput | Prisma.ReservaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Reservas.
   */
  cursor?: Prisma.ReservaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Reservas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Reservas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Reservas.
   */
  distinct?: Prisma.ReservaScalarFieldEnum | Prisma.ReservaScalarFieldEnum[]
}

/**
 * Reserva findMany
 */
export type ReservaFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaInclude<ExtArgs> | null
  /**
   * Filter, which Reservas to fetch.
   */
  where?: Prisma.ReservaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Reservas to fetch.
   */
  orderBy?: Prisma.ReservaOrderByWithRelationInput | Prisma.ReservaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Reservas.
   */
  cursor?: Prisma.ReservaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Reservas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Reservas.
   */
  skip?: number
  distinct?: Prisma.ReservaScalarFieldEnum | Prisma.ReservaScalarFieldEnum[]
}

/**
 * Reserva create
 */
export type ReservaCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaInclude<ExtArgs> | null
  /**
   * The data needed to create a Reserva.
   */
  data: Prisma.XOR<Prisma.ReservaCreateInput, Prisma.ReservaUncheckedCreateInput>
}

/**
 * Reserva createMany
 */
export type ReservaCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Reservas.
   */
  data: Prisma.ReservaCreateManyInput | Prisma.ReservaCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Reserva createManyAndReturn
 */
export type ReservaCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * The data used to create many Reservas.
   */
  data: Prisma.ReservaCreateManyInput | Prisma.ReservaCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Reserva update
 */
export type ReservaUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaInclude<ExtArgs> | null
  /**
   * The data needed to update a Reserva.
   */
  data: Prisma.XOR<Prisma.ReservaUpdateInput, Prisma.ReservaUncheckedUpdateInput>
  /**
   * Choose, which Reserva to update.
   */
  where: Prisma.ReservaWhereUniqueInput
}

/**
 * Reserva updateMany
 */
export type ReservaUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Reservas.
   */
  data: Prisma.XOR<Prisma.ReservaUpdateManyMutationInput, Prisma.ReservaUncheckedUpdateManyInput>
  /**
   * Filter which Reservas to update
   */
  where?: Prisma.ReservaWhereInput
  /**
   * Limit how many Reservas to update.
   */
  limit?: number
}

/**
 * Reserva updateManyAndReturn
 */
export type ReservaUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * The data used to update Reservas.
   */
  data: Prisma.XOR<Prisma.ReservaUpdateManyMutationInput, Prisma.ReservaUncheckedUpdateManyInput>
  /**
   * Filter which Reservas to update
   */
  where?: Prisma.ReservaWhereInput
  /**
   * Limit how many Reservas to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Reserva upsert
 */
export type ReservaUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaInclude<ExtArgs> | null
  /**
   * The filter to search for the Reserva to update in case it exists.
   */
  where: Prisma.ReservaWhereUniqueInput
  /**
   * In case the Reserva found by the `where` argument doesn't exist, create a new Reserva with this data.
   */
  create: Prisma.XOR<Prisma.ReservaCreateInput, Prisma.ReservaUncheckedCreateInput>
  /**
   * In case the Reserva was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ReservaUpdateInput, Prisma.ReservaUncheckedUpdateInput>
}

/**
 * Reserva delete
 */
export type ReservaDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaInclude<ExtArgs> | null
  /**
   * Filter which Reserva to delete.
   */
  where: Prisma.ReservaWhereUniqueInput
}

/**
 * Reserva deleteMany
 */
export type ReservaDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Reservas to delete
   */
  where?: Prisma.ReservaWhereInput
  /**
   * Limit how many Reservas to delete.
   */
  limit?: number
}

/**
 * Reserva without action
 */
export type ReservaDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaInclude<ExtArgs> | null
}
