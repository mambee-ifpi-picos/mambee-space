
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Usuario` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Usuario
 * 
 */
export type UsuarioModel = runtime.Types.Result.DefaultSelection<Prisma.$UsuarioPayload>

export type AggregateUsuario = {
  _count: UsuarioCountAggregateOutputType | null
  _avg: UsuarioAvgAggregateOutputType | null
  _sum: UsuarioSumAggregateOutputType | null
  _min: UsuarioMinAggregateOutputType | null
  _max: UsuarioMaxAggregateOutputType | null
}

export type UsuarioAvgAggregateOutputType = {
  idUsuario: number | null
}

export type UsuarioSumAggregateOutputType = {
  idUsuario: number | null
}

export type UsuarioMinAggregateOutputType = {
  idUsuario: number | null
  foto: string | null
  email: string | null
  nome: string | null
  admin: boolean | null
}

export type UsuarioMaxAggregateOutputType = {
  idUsuario: number | null
  foto: string | null
  email: string | null
  nome: string | null
  admin: boolean | null
}

export type UsuarioCountAggregateOutputType = {
  idUsuario: number
  foto: number
  email: number
  nome: number
  admin: number
  _all: number
}


export type UsuarioAvgAggregateInputType = {
  idUsuario?: true
}

export type UsuarioSumAggregateInputType = {
  idUsuario?: true
}

export type UsuarioMinAggregateInputType = {
  idUsuario?: true
  foto?: true
  email?: true
  nome?: true
  admin?: true
}

export type UsuarioMaxAggregateInputType = {
  idUsuario?: true
  foto?: true
  email?: true
  nome?: true
  admin?: true
}

export type UsuarioCountAggregateInputType = {
  idUsuario?: true
  foto?: true
  email?: true
  nome?: true
  admin?: true
  _all?: true
}

export type UsuarioAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Usuario to aggregate.
   */
  where?: Prisma.UsuarioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Usuarios to fetch.
   */
  orderBy?: Prisma.UsuarioOrderByWithRelationInput | Prisma.UsuarioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UsuarioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Usuarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Usuarios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Usuarios
  **/
  _count?: true | UsuarioCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: UsuarioAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: UsuarioSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UsuarioMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UsuarioMaxAggregateInputType
}

export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
      [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUsuario[P]>
    : Prisma.GetScalarType<T[P], AggregateUsuario[P]>
}




export type UsuarioGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UsuarioWhereInput
  orderBy?: Prisma.UsuarioOrderByWithAggregationInput | Prisma.UsuarioOrderByWithAggregationInput[]
  by: Prisma.UsuarioScalarFieldEnum[] | Prisma.UsuarioScalarFieldEnum
  having?: Prisma.UsuarioScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UsuarioCountAggregateInputType | true
  _avg?: UsuarioAvgAggregateInputType
  _sum?: UsuarioSumAggregateInputType
  _min?: UsuarioMinAggregateInputType
  _max?: UsuarioMaxAggregateInputType
}

export type UsuarioGroupByOutputType = {
  idUsuario: number
  foto: string | null
  email: string
  nome: string
  admin: boolean
  _count: UsuarioCountAggregateOutputType | null
  _avg: UsuarioAvgAggregateOutputType | null
  _sum: UsuarioSumAggregateOutputType | null
  _min: UsuarioMinAggregateOutputType | null
  _max: UsuarioMaxAggregateOutputType | null
}

type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UsuarioGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UsuarioGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UsuarioGroupByOutputType[P]>
      }
    >
  >



export type UsuarioWhereInput = {
  AND?: Prisma.UsuarioWhereInput | Prisma.UsuarioWhereInput[]
  OR?: Prisma.UsuarioWhereInput[]
  NOT?: Prisma.UsuarioWhereInput | Prisma.UsuarioWhereInput[]
  idUsuario?: Prisma.IntFilter<"Usuario"> | number
  foto?: Prisma.StringNullableFilter<"Usuario"> | string | null
  email?: Prisma.StringFilter<"Usuario"> | string
  nome?: Prisma.StringFilter<"Usuario"> | string
  admin?: Prisma.BoolFilter<"Usuario"> | boolean
  salasCriadas?: Prisma.SalaListRelationFilter
  espacosCriados?: Prisma.EspacoListRelationFilter
  reservasCriadas?: Prisma.ReservaListRelationFilter
}

export type UsuarioOrderByWithRelationInput = {
  idUsuario?: Prisma.SortOrder
  foto?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  admin?: Prisma.SortOrder
  salasCriadas?: Prisma.SalaOrderByRelationAggregateInput
  espacosCriados?: Prisma.EspacoOrderByRelationAggregateInput
  reservasCriadas?: Prisma.ReservaOrderByRelationAggregateInput
}

export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
  idUsuario?: number
  email?: string
  AND?: Prisma.UsuarioWhereInput | Prisma.UsuarioWhereInput[]
  OR?: Prisma.UsuarioWhereInput[]
  NOT?: Prisma.UsuarioWhereInput | Prisma.UsuarioWhereInput[]
  foto?: Prisma.StringNullableFilter<"Usuario"> | string | null
  nome?: Prisma.StringFilter<"Usuario"> | string
  admin?: Prisma.BoolFilter<"Usuario"> | boolean
  salasCriadas?: Prisma.SalaListRelationFilter
  espacosCriados?: Prisma.EspacoListRelationFilter
  reservasCriadas?: Prisma.ReservaListRelationFilter
}, "idUsuario" | "email">

export type UsuarioOrderByWithAggregationInput = {
  idUsuario?: Prisma.SortOrder
  foto?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  admin?: Prisma.SortOrder
  _count?: Prisma.UsuarioCountOrderByAggregateInput
  _avg?: Prisma.UsuarioAvgOrderByAggregateInput
  _max?: Prisma.UsuarioMaxOrderByAggregateInput
  _min?: Prisma.UsuarioMinOrderByAggregateInput
  _sum?: Prisma.UsuarioSumOrderByAggregateInput
}

export type UsuarioScalarWhereWithAggregatesInput = {
  AND?: Prisma.UsuarioScalarWhereWithAggregatesInput | Prisma.UsuarioScalarWhereWithAggregatesInput[]
  OR?: Prisma.UsuarioScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UsuarioScalarWhereWithAggregatesInput | Prisma.UsuarioScalarWhereWithAggregatesInput[]
  idUsuario?: Prisma.IntWithAggregatesFilter<"Usuario"> | number
  foto?: Prisma.StringNullableWithAggregatesFilter<"Usuario"> | string | null
  email?: Prisma.StringWithAggregatesFilter<"Usuario"> | string
  nome?: Prisma.StringWithAggregatesFilter<"Usuario"> | string
  admin?: Prisma.BoolWithAggregatesFilter<"Usuario"> | boolean
}

export type UsuarioCreateInput = {
  foto?: string | null
  email: string
  nome: string
  admin?: boolean
  salasCriadas?: Prisma.SalaCreateNestedManyWithoutCriadorInput
  espacosCriados?: Prisma.EspacoCreateNestedManyWithoutCriadorInput
  reservasCriadas?: Prisma.ReservaCreateNestedManyWithoutCriadorInput
}

export type UsuarioUncheckedCreateInput = {
  idUsuario?: number
  foto?: string | null
  email: string
  nome: string
  admin?: boolean
  salasCriadas?: Prisma.SalaUncheckedCreateNestedManyWithoutCriadorInput
  espacosCriados?: Prisma.EspacoUncheckedCreateNestedManyWithoutCriadorInput
  reservasCriadas?: Prisma.ReservaUncheckedCreateNestedManyWithoutCriadorInput
}

export type UsuarioUpdateInput = {
  foto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  admin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  salasCriadas?: Prisma.SalaUpdateManyWithoutCriadorNestedInput
  espacosCriados?: Prisma.EspacoUpdateManyWithoutCriadorNestedInput
  reservasCriadas?: Prisma.ReservaUpdateManyWithoutCriadorNestedInput
}

export type UsuarioUncheckedUpdateInput = {
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  foto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  admin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  salasCriadas?: Prisma.SalaUncheckedUpdateManyWithoutCriadorNestedInput
  espacosCriados?: Prisma.EspacoUncheckedUpdateManyWithoutCriadorNestedInput
  reservasCriadas?: Prisma.ReservaUncheckedUpdateManyWithoutCriadorNestedInput
}

export type UsuarioCreateManyInput = {
  idUsuario?: number
  foto?: string | null
  email: string
  nome: string
  admin?: boolean
}

export type UsuarioUpdateManyMutationInput = {
  foto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  admin?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type UsuarioUncheckedUpdateManyInput = {
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  foto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  admin?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type UsuarioCountOrderByAggregateInput = {
  idUsuario?: Prisma.SortOrder
  foto?: Prisma.SortOrder
  email?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  admin?: Prisma.SortOrder
}

export type UsuarioAvgOrderByAggregateInput = {
  idUsuario?: Prisma.SortOrder
}

export type UsuarioMaxOrderByAggregateInput = {
  idUsuario?: Prisma.SortOrder
  foto?: Prisma.SortOrder
  email?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  admin?: Prisma.SortOrder
}

export type UsuarioMinOrderByAggregateInput = {
  idUsuario?: Prisma.SortOrder
  foto?: Prisma.SortOrder
  email?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  admin?: Prisma.SortOrder
}

export type UsuarioSumOrderByAggregateInput = {
  idUsuario?: Prisma.SortOrder
}

export type UsuarioScalarRelationFilter = {
  is?: Prisma.UsuarioWhereInput
  isNot?: Prisma.UsuarioWhereInput
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type UsuarioCreateNestedOneWithoutSalasCriadasInput = {
  create?: Prisma.XOR<Prisma.UsuarioCreateWithoutSalasCriadasInput, Prisma.UsuarioUncheckedCreateWithoutSalasCriadasInput>
  connectOrCreate?: Prisma.UsuarioCreateOrConnectWithoutSalasCriadasInput
  connect?: Prisma.UsuarioWhereUniqueInput
}

export type UsuarioUpdateOneRequiredWithoutSalasCriadasNestedInput = {
  create?: Prisma.XOR<Prisma.UsuarioCreateWithoutSalasCriadasInput, Prisma.UsuarioUncheckedCreateWithoutSalasCriadasInput>
  connectOrCreate?: Prisma.UsuarioCreateOrConnectWithoutSalasCriadasInput
  upsert?: Prisma.UsuarioUpsertWithoutSalasCriadasInput
  connect?: Prisma.UsuarioWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UsuarioUpdateToOneWithWhereWithoutSalasCriadasInput, Prisma.UsuarioUpdateWithoutSalasCriadasInput>, Prisma.UsuarioUncheckedUpdateWithoutSalasCriadasInput>
}

export type UsuarioCreateNestedOneWithoutEspacosCriadosInput = {
  create?: Prisma.XOR<Prisma.UsuarioCreateWithoutEspacosCriadosInput, Prisma.UsuarioUncheckedCreateWithoutEspacosCriadosInput>
  connectOrCreate?: Prisma.UsuarioCreateOrConnectWithoutEspacosCriadosInput
  connect?: Prisma.UsuarioWhereUniqueInput
}

export type UsuarioUpdateOneRequiredWithoutEspacosCriadosNestedInput = {
  create?: Prisma.XOR<Prisma.UsuarioCreateWithoutEspacosCriadosInput, Prisma.UsuarioUncheckedCreateWithoutEspacosCriadosInput>
  connectOrCreate?: Prisma.UsuarioCreateOrConnectWithoutEspacosCriadosInput
  upsert?: Prisma.UsuarioUpsertWithoutEspacosCriadosInput
  connect?: Prisma.UsuarioWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UsuarioUpdateToOneWithWhereWithoutEspacosCriadosInput, Prisma.UsuarioUpdateWithoutEspacosCriadosInput>, Prisma.UsuarioUncheckedUpdateWithoutEspacosCriadosInput>
}

export type UsuarioCreateNestedOneWithoutReservasCriadasInput = {
  create?: Prisma.XOR<Prisma.UsuarioCreateWithoutReservasCriadasInput, Prisma.UsuarioUncheckedCreateWithoutReservasCriadasInput>
  connectOrCreate?: Prisma.UsuarioCreateOrConnectWithoutReservasCriadasInput
  connect?: Prisma.UsuarioWhereUniqueInput
}

export type UsuarioUpdateOneRequiredWithoutReservasCriadasNestedInput = {
  create?: Prisma.XOR<Prisma.UsuarioCreateWithoutReservasCriadasInput, Prisma.UsuarioUncheckedCreateWithoutReservasCriadasInput>
  connectOrCreate?: Prisma.UsuarioCreateOrConnectWithoutReservasCriadasInput
  upsert?: Prisma.UsuarioUpsertWithoutReservasCriadasInput
  connect?: Prisma.UsuarioWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UsuarioUpdateToOneWithWhereWithoutReservasCriadasInput, Prisma.UsuarioUpdateWithoutReservasCriadasInput>, Prisma.UsuarioUncheckedUpdateWithoutReservasCriadasInput>
}

export type UsuarioCreateWithoutSalasCriadasInput = {
  foto?: string | null
  email: string
  nome: string
  admin?: boolean
  espacosCriados?: Prisma.EspacoCreateNestedManyWithoutCriadorInput
  reservasCriadas?: Prisma.ReservaCreateNestedManyWithoutCriadorInput
}

export type UsuarioUncheckedCreateWithoutSalasCriadasInput = {
  idUsuario?: number
  foto?: string | null
  email: string
  nome: string
  admin?: boolean
  espacosCriados?: Prisma.EspacoUncheckedCreateNestedManyWithoutCriadorInput
  reservasCriadas?: Prisma.ReservaUncheckedCreateNestedManyWithoutCriadorInput
}

export type UsuarioCreateOrConnectWithoutSalasCriadasInput = {
  where: Prisma.UsuarioWhereUniqueInput
  create: Prisma.XOR<Prisma.UsuarioCreateWithoutSalasCriadasInput, Prisma.UsuarioUncheckedCreateWithoutSalasCriadasInput>
}

export type UsuarioUpsertWithoutSalasCriadasInput = {
  update: Prisma.XOR<Prisma.UsuarioUpdateWithoutSalasCriadasInput, Prisma.UsuarioUncheckedUpdateWithoutSalasCriadasInput>
  create: Prisma.XOR<Prisma.UsuarioCreateWithoutSalasCriadasInput, Prisma.UsuarioUncheckedCreateWithoutSalasCriadasInput>
  where?: Prisma.UsuarioWhereInput
}

export type UsuarioUpdateToOneWithWhereWithoutSalasCriadasInput = {
  where?: Prisma.UsuarioWhereInput
  data: Prisma.XOR<Prisma.UsuarioUpdateWithoutSalasCriadasInput, Prisma.UsuarioUncheckedUpdateWithoutSalasCriadasInput>
}

export type UsuarioUpdateWithoutSalasCriadasInput = {
  foto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  admin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  espacosCriados?: Prisma.EspacoUpdateManyWithoutCriadorNestedInput
  reservasCriadas?: Prisma.ReservaUpdateManyWithoutCriadorNestedInput
}

export type UsuarioUncheckedUpdateWithoutSalasCriadasInput = {
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  foto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  admin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  espacosCriados?: Prisma.EspacoUncheckedUpdateManyWithoutCriadorNestedInput
  reservasCriadas?: Prisma.ReservaUncheckedUpdateManyWithoutCriadorNestedInput
}

export type UsuarioCreateWithoutEspacosCriadosInput = {
  foto?: string | null
  email: string
  nome: string
  admin?: boolean
  salasCriadas?: Prisma.SalaCreateNestedManyWithoutCriadorInput
  reservasCriadas?: Prisma.ReservaCreateNestedManyWithoutCriadorInput
}

export type UsuarioUncheckedCreateWithoutEspacosCriadosInput = {
  idUsuario?: number
  foto?: string | null
  email: string
  nome: string
  admin?: boolean
  salasCriadas?: Prisma.SalaUncheckedCreateNestedManyWithoutCriadorInput
  reservasCriadas?: Prisma.ReservaUncheckedCreateNestedManyWithoutCriadorInput
}

export type UsuarioCreateOrConnectWithoutEspacosCriadosInput = {
  where: Prisma.UsuarioWhereUniqueInput
  create: Prisma.XOR<Prisma.UsuarioCreateWithoutEspacosCriadosInput, Prisma.UsuarioUncheckedCreateWithoutEspacosCriadosInput>
}

export type UsuarioUpsertWithoutEspacosCriadosInput = {
  update: Prisma.XOR<Prisma.UsuarioUpdateWithoutEspacosCriadosInput, Prisma.UsuarioUncheckedUpdateWithoutEspacosCriadosInput>
  create: Prisma.XOR<Prisma.UsuarioCreateWithoutEspacosCriadosInput, Prisma.UsuarioUncheckedCreateWithoutEspacosCriadosInput>
  where?: Prisma.UsuarioWhereInput
}

export type UsuarioUpdateToOneWithWhereWithoutEspacosCriadosInput = {
  where?: Prisma.UsuarioWhereInput
  data: Prisma.XOR<Prisma.UsuarioUpdateWithoutEspacosCriadosInput, Prisma.UsuarioUncheckedUpdateWithoutEspacosCriadosInput>
}

export type UsuarioUpdateWithoutEspacosCriadosInput = {
  foto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  admin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  salasCriadas?: Prisma.SalaUpdateManyWithoutCriadorNestedInput
  reservasCriadas?: Prisma.ReservaUpdateManyWithoutCriadorNestedInput
}

export type UsuarioUncheckedUpdateWithoutEspacosCriadosInput = {
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  foto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  admin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  salasCriadas?: Prisma.SalaUncheckedUpdateManyWithoutCriadorNestedInput
  reservasCriadas?: Prisma.ReservaUncheckedUpdateManyWithoutCriadorNestedInput
}

export type UsuarioCreateWithoutReservasCriadasInput = {
  foto?: string | null
  email: string
  nome: string
  admin?: boolean
  salasCriadas?: Prisma.SalaCreateNestedManyWithoutCriadorInput
  espacosCriados?: Prisma.EspacoCreateNestedManyWithoutCriadorInput
}

export type UsuarioUncheckedCreateWithoutReservasCriadasInput = {
  idUsuario?: number
  foto?: string | null
  email: string
  nome: string
  admin?: boolean
  salasCriadas?: Prisma.SalaUncheckedCreateNestedManyWithoutCriadorInput
  espacosCriados?: Prisma.EspacoUncheckedCreateNestedManyWithoutCriadorInput
}

export type UsuarioCreateOrConnectWithoutReservasCriadasInput = {
  where: Prisma.UsuarioWhereUniqueInput
  create: Prisma.XOR<Prisma.UsuarioCreateWithoutReservasCriadasInput, Prisma.UsuarioUncheckedCreateWithoutReservasCriadasInput>
}

export type UsuarioUpsertWithoutReservasCriadasInput = {
  update: Prisma.XOR<Prisma.UsuarioUpdateWithoutReservasCriadasInput, Prisma.UsuarioUncheckedUpdateWithoutReservasCriadasInput>
  create: Prisma.XOR<Prisma.UsuarioCreateWithoutReservasCriadasInput, Prisma.UsuarioUncheckedCreateWithoutReservasCriadasInput>
  where?: Prisma.UsuarioWhereInput
}

export type UsuarioUpdateToOneWithWhereWithoutReservasCriadasInput = {
  where?: Prisma.UsuarioWhereInput
  data: Prisma.XOR<Prisma.UsuarioUpdateWithoutReservasCriadasInput, Prisma.UsuarioUncheckedUpdateWithoutReservasCriadasInput>
}

export type UsuarioUpdateWithoutReservasCriadasInput = {
  foto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  admin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  salasCriadas?: Prisma.SalaUpdateManyWithoutCriadorNestedInput
  espacosCriados?: Prisma.EspacoUpdateManyWithoutCriadorNestedInput
}

export type UsuarioUncheckedUpdateWithoutReservasCriadasInput = {
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  foto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  admin?: Prisma.BoolFieldUpdateOperationsInput | boolean
  salasCriadas?: Prisma.SalaUncheckedUpdateManyWithoutCriadorNestedInput
  espacosCriados?: Prisma.EspacoUncheckedUpdateManyWithoutCriadorNestedInput
}


/**
 * Count Type UsuarioCountOutputType
 */

export type UsuarioCountOutputType = {
  salasCriadas: number
  espacosCriados: number
  reservasCriadas: number
}

export type UsuarioCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  salasCriadas?: boolean | UsuarioCountOutputTypeCountSalasCriadasArgs
  espacosCriados?: boolean | UsuarioCountOutputTypeCountEspacosCriadosArgs
  reservasCriadas?: boolean | UsuarioCountOutputTypeCountReservasCriadasArgs
}

/**
 * UsuarioCountOutputType without action
 */
export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UsuarioCountOutputType
   */
  select?: Prisma.UsuarioCountOutputTypeSelect<ExtArgs> | null
}

/**
 * UsuarioCountOutputType without action
 */
export type UsuarioCountOutputTypeCountSalasCriadasArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SalaWhereInput
}

/**
 * UsuarioCountOutputType without action
 */
export type UsuarioCountOutputTypeCountEspacosCriadosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EspacoWhereInput
}

/**
 * UsuarioCountOutputType without action
 */
export type UsuarioCountOutputTypeCountReservasCriadasArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ReservaWhereInput
}


export type UsuarioSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idUsuario?: boolean
  foto?: boolean
  email?: boolean
  nome?: boolean
  admin?: boolean
  salasCriadas?: boolean | Prisma.Usuario$salasCriadasArgs<ExtArgs>
  espacosCriados?: boolean | Prisma.Usuario$espacosCriadosArgs<ExtArgs>
  reservasCriadas?: boolean | Prisma.Usuario$reservasCriadasArgs<ExtArgs>
  _count?: boolean | Prisma.UsuarioCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["usuario"]>

export type UsuarioSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idUsuario?: boolean
  foto?: boolean
  email?: boolean
  nome?: boolean
  admin?: boolean
}, ExtArgs["result"]["usuario"]>

export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idUsuario?: boolean
  foto?: boolean
  email?: boolean
  nome?: boolean
  admin?: boolean
}, ExtArgs["result"]["usuario"]>

export type UsuarioSelectScalar = {
  idUsuario?: boolean
  foto?: boolean
  email?: boolean
  nome?: boolean
  admin?: boolean
}

export type UsuarioOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"idUsuario" | "foto" | "email" | "nome" | "admin", ExtArgs["result"]["usuario"]>
export type UsuarioInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  salasCriadas?: boolean | Prisma.Usuario$salasCriadasArgs<ExtArgs>
  espacosCriados?: boolean | Prisma.Usuario$espacosCriadosArgs<ExtArgs>
  reservasCriadas?: boolean | Prisma.Usuario$reservasCriadasArgs<ExtArgs>
  _count?: boolean | Prisma.UsuarioCountOutputTypeDefaultArgs<ExtArgs>
}
export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $UsuarioPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Usuario"
  objects: {
    salasCriadas: Prisma.$SalaPayload<ExtArgs>[]
    espacosCriados: Prisma.$EspacoPayload<ExtArgs>[]
    reservasCriadas: Prisma.$ReservaPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    idUsuario: number
    foto: string | null
    email: string
    nome: string
    admin: boolean
  }, ExtArgs["result"]["usuario"]>
  composites: {}
}

export type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UsuarioPayload, S>

export type UsuarioCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UsuarioCountAggregateInputType | true
  }

export interface UsuarioDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
  /**
   * Find zero or one Usuario that matches the filter.
   * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
   * @example
   * // Get one Usuario
   * const usuario = await prisma.usuario.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UsuarioFindUniqueArgs>(args: Prisma.SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UsuarioClient<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
   * @example
   * // Get one Usuario
   * const usuario = await prisma.usuario.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UsuarioClient<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Usuario that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
   * @example
   * // Get one Usuario
   * const usuario = await prisma.usuario.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UsuarioFindFirstArgs>(args?: Prisma.SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma.Prisma__UsuarioClient<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Usuario that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
   * @example
   * // Get one Usuario
   * const usuario = await prisma.usuario.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UsuarioClient<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Usuarios that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * 
   * // Get first 10 Usuarios
   * const usuarios = await prisma.usuario.findMany({ take: 10 })
   * 
   * // Only select the `idUsuario`
   * const usuarioWithIdUsuarioOnly = await prisma.usuario.findMany({ select: { idUsuario: true } })
   * 
   */
  findMany<T extends UsuarioFindManyArgs>(args?: Prisma.SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Usuario.
   * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
   * @example
   * // Create one Usuario
   * const Usuario = await prisma.usuario.create({
   *   data: {
   *     // ... data to create a Usuario
   *   }
   * })
   * 
   */
  create<T extends UsuarioCreateArgs>(args: Prisma.SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma.Prisma__UsuarioClient<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Usuarios.
   * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
   * @example
   * // Create many Usuarios
   * const usuario = await prisma.usuario.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UsuarioCreateManyArgs>(args?: Prisma.SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Usuarios and returns the data saved in the database.
   * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
   * @example
   * // Create many Usuarios
   * const usuario = await prisma.usuario.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Usuarios and only return the `idUsuario`
   * const usuarioWithIdUsuarioOnly = await prisma.usuario.createManyAndReturn({
   *   select: { idUsuario: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Usuario.
   * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
   * @example
   * // Delete one Usuario
   * const Usuario = await prisma.usuario.delete({
   *   where: {
   *     // ... filter to delete one Usuario
   *   }
   * })
   * 
   */
  delete<T extends UsuarioDeleteArgs>(args: Prisma.SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma.Prisma__UsuarioClient<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Usuario.
   * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
   * @example
   * // Update one Usuario
   * const usuario = await prisma.usuario.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UsuarioUpdateArgs>(args: Prisma.SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma.Prisma__UsuarioClient<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Usuarios.
   * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
   * @example
   * // Delete a few Usuarios
   * const { count } = await prisma.usuario.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UsuarioDeleteManyArgs>(args?: Prisma.SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Usuarios.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Usuarios
   * const usuario = await prisma.usuario.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UsuarioUpdateManyArgs>(args: Prisma.SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Usuarios and returns the data updated in the database.
   * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
   * @example
   * // Update many Usuarios
   * const usuario = await prisma.usuario.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Usuarios and only return the `idUsuario`
   * const usuarioWithIdUsuarioOnly = await prisma.usuario.updateManyAndReturn({
   *   select: { idUsuario: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Usuario.
   * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
   * @example
   * // Update or create a Usuario
   * const usuario = await prisma.usuario.upsert({
   *   create: {
   *     // ... data to create a Usuario
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Usuario we want to update
   *   }
   * })
   */
  upsert<T extends UsuarioUpsertArgs>(args: Prisma.SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma.Prisma__UsuarioClient<runtime.Types.Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Usuarios.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
   * @example
   * // Count the number of Usuarios
   * const count = await prisma.usuario.count({
   *   where: {
   *     // ... the filter for the Usuarios we want to count
   *   }
   * })
  **/
  count<T extends UsuarioCountArgs>(
    args?: Prisma.Subset<T, UsuarioCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UsuarioCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Usuario.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UsuarioAggregateArgs>(args: Prisma.Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

  /**
   * Group by Usuario.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UsuarioGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UsuarioGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UsuarioGroupByArgs['orderBy'] }
      : { orderBy?: UsuarioGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Usuario model
 */
readonly fields: UsuarioFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Usuario.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  salasCriadas<T extends Prisma.Usuario$salasCriadasArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Usuario$salasCriadasArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SalaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  espacosCriados<T extends Prisma.Usuario$espacosCriadosArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Usuario$espacosCriadosArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EspacoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  reservasCriadas<T extends Prisma.Usuario$reservasCriadasArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Usuario$reservasCriadasArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Usuario model
 */
export interface UsuarioFieldRefs {
  readonly idUsuario: Prisma.FieldRef<"Usuario", 'Int'>
  readonly foto: Prisma.FieldRef<"Usuario", 'String'>
  readonly email: Prisma.FieldRef<"Usuario", 'String'>
  readonly nome: Prisma.FieldRef<"Usuario", 'String'>
  readonly admin: Prisma.FieldRef<"Usuario", 'Boolean'>
}
    

// Custom InputTypes
/**
 * Usuario findUnique
 */
export type UsuarioFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UsuarioInclude<ExtArgs> | null
  /**
   * Filter, which Usuario to fetch.
   */
  where: Prisma.UsuarioWhereUniqueInput
}

/**
 * Usuario findUniqueOrThrow
 */
export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UsuarioInclude<ExtArgs> | null
  /**
   * Filter, which Usuario to fetch.
   */
  where: Prisma.UsuarioWhereUniqueInput
}

/**
 * Usuario findFirst
 */
export type UsuarioFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UsuarioInclude<ExtArgs> | null
  /**
   * Filter, which Usuario to fetch.
   */
  where?: Prisma.UsuarioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Usuarios to fetch.
   */
  orderBy?: Prisma.UsuarioOrderByWithRelationInput | Prisma.UsuarioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Usuarios.
   */
  cursor?: Prisma.UsuarioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Usuarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Usuarios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Usuarios.
   */
  distinct?: Prisma.UsuarioScalarFieldEnum | Prisma.UsuarioScalarFieldEnum[]
}

/**
 * Usuario findFirstOrThrow
 */
export type UsuarioFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UsuarioInclude<ExtArgs> | null
  /**
   * Filter, which Usuario to fetch.
   */
  where?: Prisma.UsuarioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Usuarios to fetch.
   */
  orderBy?: Prisma.UsuarioOrderByWithRelationInput | Prisma.UsuarioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Usuarios.
   */
  cursor?: Prisma.UsuarioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Usuarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Usuarios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Usuarios.
   */
  distinct?: Prisma.UsuarioScalarFieldEnum | Prisma.UsuarioScalarFieldEnum[]
}

/**
 * Usuario findMany
 */
export type UsuarioFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UsuarioInclude<ExtArgs> | null
  /**
   * Filter, which Usuarios to fetch.
   */
  where?: Prisma.UsuarioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Usuarios to fetch.
   */
  orderBy?: Prisma.UsuarioOrderByWithRelationInput | Prisma.UsuarioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Usuarios.
   */
  cursor?: Prisma.UsuarioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Usuarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Usuarios.
   */
  skip?: number
  distinct?: Prisma.UsuarioScalarFieldEnum | Prisma.UsuarioScalarFieldEnum[]
}

/**
 * Usuario create
 */
export type UsuarioCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UsuarioInclude<ExtArgs> | null
  /**
   * The data needed to create a Usuario.
   */
  data: Prisma.XOR<Prisma.UsuarioCreateInput, Prisma.UsuarioUncheckedCreateInput>
}

/**
 * Usuario createMany
 */
export type UsuarioCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Usuarios.
   */
  data: Prisma.UsuarioCreateManyInput | Prisma.UsuarioCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Usuario createManyAndReturn
 */
export type UsuarioCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * The data used to create many Usuarios.
   */
  data: Prisma.UsuarioCreateManyInput | Prisma.UsuarioCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Usuario update
 */
export type UsuarioUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UsuarioInclude<ExtArgs> | null
  /**
   * The data needed to update a Usuario.
   */
  data: Prisma.XOR<Prisma.UsuarioUpdateInput, Prisma.UsuarioUncheckedUpdateInput>
  /**
   * Choose, which Usuario to update.
   */
  where: Prisma.UsuarioWhereUniqueInput
}

/**
 * Usuario updateMany
 */
export type UsuarioUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Usuarios.
   */
  data: Prisma.XOR<Prisma.UsuarioUpdateManyMutationInput, Prisma.UsuarioUncheckedUpdateManyInput>
  /**
   * Filter which Usuarios to update
   */
  where?: Prisma.UsuarioWhereInput
  /**
   * Limit how many Usuarios to update.
   */
  limit?: number
}

/**
 * Usuario updateManyAndReturn
 */
export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * The data used to update Usuarios.
   */
  data: Prisma.XOR<Prisma.UsuarioUpdateManyMutationInput, Prisma.UsuarioUncheckedUpdateManyInput>
  /**
   * Filter which Usuarios to update
   */
  where?: Prisma.UsuarioWhereInput
  /**
   * Limit how many Usuarios to update.
   */
  limit?: number
}

/**
 * Usuario upsert
 */
export type UsuarioUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UsuarioInclude<ExtArgs> | null
  /**
   * The filter to search for the Usuario to update in case it exists.
   */
  where: Prisma.UsuarioWhereUniqueInput
  /**
   * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
   */
  create: Prisma.XOR<Prisma.UsuarioCreateInput, Prisma.UsuarioUncheckedCreateInput>
  /**
   * In case the Usuario was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UsuarioUpdateInput, Prisma.UsuarioUncheckedUpdateInput>
}

/**
 * Usuario delete
 */
export type UsuarioDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UsuarioInclude<ExtArgs> | null
  /**
   * Filter which Usuario to delete.
   */
  where: Prisma.UsuarioWhereUniqueInput
}

/**
 * Usuario deleteMany
 */
export type UsuarioDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Usuarios to delete
   */
  where?: Prisma.UsuarioWhereInput
  /**
   * Limit how many Usuarios to delete.
   */
  limit?: number
}

/**
 * Usuario.salasCriadas
 */
export type Usuario$salasCriadasArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Sala
   */
  select?: Prisma.SalaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Sala
   */
  omit?: Prisma.SalaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaInclude<ExtArgs> | null
  where?: Prisma.SalaWhereInput
  orderBy?: Prisma.SalaOrderByWithRelationInput | Prisma.SalaOrderByWithRelationInput[]
  cursor?: Prisma.SalaWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SalaScalarFieldEnum | Prisma.SalaScalarFieldEnum[]
}

/**
 * Usuario.espacosCriados
 */
export type Usuario$espacosCriadosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Espaco
   */
  select?: Prisma.EspacoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Espaco
   */
  omit?: Prisma.EspacoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EspacoInclude<ExtArgs> | null
  where?: Prisma.EspacoWhereInput
  orderBy?: Prisma.EspacoOrderByWithRelationInput | Prisma.EspacoOrderByWithRelationInput[]
  cursor?: Prisma.EspacoWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EspacoScalarFieldEnum | Prisma.EspacoScalarFieldEnum[]
}

/**
 * Usuario.reservasCriadas
 */
export type Usuario$reservasCriadasArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Reserva
   */
  select?: Prisma.ReservaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Reserva
   */
  omit?: Prisma.ReservaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReservaInclude<ExtArgs> | null
  where?: Prisma.ReservaWhereInput
  orderBy?: Prisma.ReservaOrderByWithRelationInput | Prisma.ReservaOrderByWithRelationInput[]
  cursor?: Prisma.ReservaWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ReservaScalarFieldEnum | Prisma.ReservaScalarFieldEnum[]
}

/**
 * Usuario without action
 */
export type UsuarioDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Usuario
   */
  select?: Prisma.UsuarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Usuario
   */
  omit?: Prisma.UsuarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UsuarioInclude<ExtArgs> | null
}
